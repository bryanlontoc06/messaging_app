{"version":3,"sources":["bak_pages/Home/components.js","bak_pages/DMs/components.js","bak_pages/JumpToComponent/components.js","bak_pages/DMs/index.js","bak_pages/You/components.js","bak_pages/You/index.js","components/Main/components.js","assets/sampleLogo.png","components/helpers/useSessionStorage.js","components/helpers/useLocalStorage.js","components/Main/hooks.js","components/Global/AppContext.js","components/api/api.js","components/helpers/helpers.js","components/Main/NewChannelComponent.js","components/Main/AddUserComponent.js","components/Snackbars/index.js","components/Main/AddDMModalComponent.js","components/Main/ChatUserProfileComponent.js","components/Main/ContentChatBoxBody.js","components/Main/ContentChatBoxSectionComponent.js","components/Main/ContentChannelSectionComponent.js","components/Main/index.js","components/Login/components.js","components/Login/hooks.js","components/Login/index.js","components/Register/components.js","components/Register/hooks.js","components/Register/index.js","components/Routes/index.js","components/Layout/hooks.js","components/Layout/index.js","App.js","reportWebVitals.js","index.js"],"names":["IconsNLabels","styled","div","Labels","MaterialLockOutlinedIcon","span","MaterialCommentOutlinedIcon","MaterialAddBoxIcon","MaterialFavoriteIcon","BsPencilSquare","ChatBody","MaterialTextField","Box","Badge","theme","right","top","border","padding","background","MaterialNotificationsOffOutlinedIcon","MaterialEventBusyIcon","fadeInAnimation","keyframes","fadeIn","useStyles","makeStyles","avatarSize","width","height","fontSize","fontFamily","color","style","position","left","transform","bgcolor","boxShadow","p","Container","LogoContainer","Logo","img","ContentContainer","ContentChannelSection","ContentChannelTitle","TextField","ContentUserProfileContainer","Avatar","MaterialAvatar","ChannelsAndMessagesContainer","ChannelsTitleHeader","AddIcon","MaterialAddIcon","ChannelsContainer","Channel","props","active","ContentChatBoxSection","MaterialLockIcon","ContentChatBoxHeader","ContentChatBoxBody","ContentChatBoxChannelTitle","ChatBoxAddUserContainer","Button","MaterialButton","AvatarGroup","MaterialAvatarGroup","AvatarSmallGroup","AvatarnButton","ChatInput","ChatsContainer","ChatUsernTime","ChatUserName","ChatUserTime","ChatsUserProfile","ChatMessageContainer","ChatMessages","ChatsMessageandChatInput","UidInputContainer","UsersContainer","User","AddUserUsersContainer","ButtonAddUser","SendIcon","MaterialSendIcon","Typography","MaterialTypography","UserName","UserDetailsContainer","UserID","InviteUsersTitle","ButtonAddChannel","MaterialBox","BoxDM","useSessionStorage","key","initialValue","useState","item","window","sessionStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","int1","int2","int3","int4","localStorage","AppContext","React","createContext","AppProvider","isLogin","setIsLogin","state","loginUser","func","setLoginUser","Provider","children","url","creatingUserSessionAPI","email","password","setState","history","a","axios","data","current","headers","method","then","res","status","Cookies","set","expires","open","response","setTimeout","isLoading","push","id","catch","err","errors","responseMessage","length","warning","userRegistrationAPI","retypePassword","loading","full_messages","retrieveAllUsersAPI","setIsLoading","setUsers","client","expiry","uid","retrieveAllChannelsAPI","setChannels","inviteUserToChannelAPI","selectChannel","setOpen","message","createAChannelAPI","channelName","setOpenAddChannel","retrieveAllMessagesinaChannelAPI","setAllMessages","retrieveAllMessageswithaUserAPI","createAMessageAPI","selectUser","chatMessage","setSelectChannel","retrieveMessagesinChannel","setSelectUser","retrieveMessagesinUser","useHooks","useContext","addUserEmail","useRef","userID","channels","users","searchUserDM","searchResultsDM","allMessages","duplicateForChannel","setDuplicateForChannel","duplicateForUser","setDuplicateForUser","query","setQuery","openDM","setOpenDM","anchorEl","setAnchorEl","openAddChannel","channel","matchesMD","useMediaQuery","handleOpen","handleAddUser","handleClose","openPopOver","Boolean","idPopOver","undefined","handleOpenAddChannel","all","createAMessage","createAChannel","useEffect","filteredItems","toLowerCase","filter","user","includes","getFilteredItems","debounceOnChange","debounce","e","target","handleCloseAddUserModal","event","reason","handleClickPopOver","currentTarget","handleClosePopOver","intervalRetrieveMessagesinChannel","clearTimeout","setInterval","intervalRetrieveMessagesinUser","handleLogout","remove","handleOpenDM","emailRemover","split","Index","handleCloseChannel","inputUsers","classes","usersToAdd","setUsersToAdd","openPreAddedUsersmodal","setOpenPreAddedUsersmodal","Modal","keepMounted","onClose","sx","variant","component","mt","placeholder","InputProps","disableUnderline","input","resize","inputRef","onChange","max","className","cursor","onClick","map","alt","toUpperCase","src","index","addUsersToChannel","charAt","substring","textAlign","startIcon","maxHeight","overflowY","minHeight","splice","deleteAddedUser","AddUserComponent","searchUser","getSearchUser","handleDebounceAddUser","type","Alert","forwardRef","ref","elevation","isOpen","close","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","debounceDMSearch","toggleDrawer","ChatUserProfileComponent","imgSrc","initial","chatUserName","chatUserTime","sender","marginLeft","ContentChatBoxBodyComponent","handleCloseDrawer","name","moment","created_at","fromNow","body","onSubmit","preventDefault","endAdornment","InputAdornment","ContentChatBoxSectionComponent","ContentChannelSectionComponent","channel_logo","states","setStates","Backdrop","zIndex","drawer","CircularProgress","AddDMModalComponent","Popover","transformOrigin","usersList","SwipeableDrawer","anchor","MaterialContainer","Link","MaterialLink","LogoTitle","LogoImg","useHistory","handleLogin","backgroundColor","display","flexDirection","justifyContent","maxWidth","initialValues","validationSchema","Yup","shape","required","handleBlur","handleChange","handleSubmit","isSubmitting","touched","values","mb","alignItems","pb","pt","align","fullWidth","helperText","label","margin","onBlur","py","disabled","size","RouterLink","to","underline","MaterialCheckbox","MaterialFormHelperText","Register","firstName","lastName","retypepassword","policy","oneOf","gutterBottom","Switch","Route","exact","path","Main","Login","get","readCookie","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.91bafcc0.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nimport MaterialLockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport MaterialCommentOutlinedIcon from '@mui/icons-material/CommentOutlined';\r\nimport MaterialAddBoxIcon from '@mui/icons-material/AddBox';\r\nimport MaterialFavoriteIcon from '@mui/icons-material/Favorite';\r\nimport {BsPencilSquare} from 'react-icons/bs'\r\n\r\n\r\nexport const Container = styled.div `\r\n    /* height: 100vh; */\r\n`\r\n\r\nexport const Body = styled.div `\r\n    padding: 0.75rem 0.9375rem;\r\n    padding-top: 0.625rem;\r\n`\r\n\r\n\r\n\r\n\r\nexport const IconsNLabels = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1.25rem;\r\n    margin: 1.25rem 0 1.6875rem; \r\n`\r\n\r\nexport const IconsNLabelsItems = styled(IconsNLabels) `\r\n    margin: 1.25rem 0; \r\n`\r\n\r\nexport const LockOutlinedIcon = styled(MaterialLockOutlinedIcon) `\r\n    color: #474747; \r\n`\r\nexport const Labels = styled.span `\r\n    color: #606060;\r\n`\r\n\r\nexport const CommentOutlinedIcon = styled(MaterialCommentOutlinedIcon) `\r\n    color: #474747; \r\n`\r\n\r\nexport const SectionTitle = styled.span `\r\n    color: #606060;\r\n`\r\n\r\nexport const AddBoxIcon = styled(MaterialAddBoxIcon) `\r\n    color: #474747;\r\n`\r\n\r\nexport const FavoriteIcon = styled(MaterialFavoriteIcon) `\r\n    color: #008360;\r\n    width: 0.625rem !important;\r\n    height: 0.625rem !important;\r\n`\r\n\r\nexport const Footer = styled.div `\r\n    padding: 0.75rem 0.9375rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-top: 1px solid #e6e6e6;\r\n    position: fixed;\r\n    z-index: 999;\r\n    bottom: 0;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    right: 0;\r\n    left: 0;\r\n`\r\n\r\nexport const FooterIconsNLabelsItem = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\n\r\nexport const FooterLabels = styled(Labels) ``\r\nexport const FooterIcons = styled.div `\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\nexport const PencilSquare = styled(BsPencilSquare)`\r\n    font-size: 1.3rem;\r\n`","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div `\r\n    padding: 0.75rem 0.9375rem;\r\n    padding-top: 0.625rem;\r\n`\r\nexport const ChatRow = styled.div `\r\n    display: flex;\r\n    gap: 1.125rem;\r\n    margin: 1.25rem 0;\r\n`\r\nexport const UserChatBoxContainer = styled.div `\r\n   \r\n`\r\n\r\nexport const UserName = styled.span `\r\n    fonst-size: 1.125rem;\r\n`\r\n\r\nexport const ChatBody = styled.div `\r\n    color: #606060;\r\n`\r\n\r\n\r\nexport const ChatDate = styled(ChatBody) `\r\n    color: #606060;\r\n`\r\n\r\n","import styled from 'styled-components'\r\nimport MaterialTextField from '@mui/material/TextField';\r\n\r\nexport const TextField = styled(MaterialTextField) `\r\n    width: 100%;\r\n    border-radius: 10px;\r\n`","import {Container, ChatRow, UserChatBoxContainer, UserName, ChatBody, ChatDate} from './components.js'\r\nimport JumpToComponent from '../JumpToComponent'\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst shapeStyles = { bgcolor: 'primary.main', width: 40, height: 40, borderRadius: '5px' };\r\nconst rectangle = <Box component=\"span\" sx={shapeStyles} />;\r\n\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        right: `3px`,\r\n        top: `13px`,\r\n        border: `3px solid #fff`,\r\n        padding: `0 4px`,\r\n        background: `green`\r\n    },\r\n  }));\r\n\r\nconst Index = (props) => {\r\n    const {useLocation} = props;\r\n    const location = useLocation();\r\n    return (\r\n        <Container>\r\n            {(location.pathname === '/' || location.pathname === '/dm') && <JumpToComponent />}\r\n            <ChatRow>\r\n                <StyledBadge color=\"secondary\" badgeContent=\" \" anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}>\r\n                    {rectangle}\r\n                </StyledBadge>\r\n                <UserChatBoxContainer>\r\n                    <UserName>Slackbot</UserName>\r\n                    <ChatBody>{`slackbot: Hello I'm slackbot Hello I'm slackbot Hello I'm slackbot Hello I'm slackbot`.substring(0,65)+  `... `}</ChatBody>\r\n                </UserChatBoxContainer>\r\n                <ChatDate>3h</ChatDate>\r\n            </ChatRow>\r\n            <ChatRow>\r\n                <StyledBadge color=\"secondary\" badgeContent=\" \" anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}>\r\n                    {rectangle}\r\n                </StyledBadge>\r\n                <UserChatBoxContainer>\r\n                    <UserName>Slackbot</UserName>\r\n                    <ChatBody>{`slackbot: Hello I'm slackbot Hello I'm slackbot Hello I'm slackbot Hello I'm slackbot`.substring(0,65)+  `... `}</ChatBody>\r\n                </UserChatBoxContainer>\r\n                <ChatDate>3h</ChatDate>\r\n            </ChatRow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import styled from 'styled-components'\r\nimport MaterialTextField from '@mui/material/TextField';\r\nimport MaterialNotificationsOffOutlinedIcon from '@mui/icons-material/NotificationsOffOutlined';\r\nimport MaterialEventBusyIcon from '@mui/icons-material/EventBusy';\r\n\r\nexport const Container = styled.div `\r\n    padding: 0.75rem 0.9375rem;\r\n    padding-top: 0.625rem;\r\n`\r\nexport const ProfileDetailsContainer = styled.div `\r\n    display: flex;\r\n    gap: 1.25rem;\r\n`\r\nexport const ProfileName = styled.span `\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n`\r\nexport const ActiveState = styled.span `\r\n    color: #606060;\r\n`\r\nexport const ProfileDetails = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`\r\nexport const TextField = styled(MaterialTextField) `\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    margin-top: 1.5rem !important;\r\n`\r\nexport const IconsNLabels = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1.25rem;\r\n    margin: 1.375rem 0 !important; \r\n`\r\nexport const Labels = styled.span `\r\n    color: #606060;\r\n`\r\nexport const NotificationsOffOutlinedIcon = styled(MaterialNotificationsOffOutlinedIcon) `\r\n    color: #606060;\r\n`\r\nexport const EventBusyIcon = styled(MaterialEventBusyIcon) `\r\ncolor: #606060;\r\n`","import {\r\n  Container, \r\n  ProfileDetailsContainer, \r\n  ProfileName, \r\n  ActiveState, \r\n  ProfileDetails, \r\n  NotificationsOffOutlinedIcon,\r\n  EventBusyIcon\r\n} from './components'\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport { styled } from '@mui/material/styles';\r\nimport {TextField} from './components'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport BodyIconsComponent from './BodyIconsComponent';\r\n\r\nconst shapeStyles = { bgcolor: 'primary.main', width: 56, height: 56, borderRadius: '5px' };\r\nconst rectangle = <Box component=\"span\" sx={shapeStyles} />;\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        right: `3px`,\r\n        top: `30px`,\r\n        border: `3px solid #fff`,\r\n        padding: `0 4px`,\r\n        background: `green`\r\n    },\r\n  }));\r\n\r\n\r\nconst Index = () => {\r\n\r\n    const CustomTextField = withStyles({\r\n        root: {\r\n          '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n              borderRadius: `8px`,\r\n            },\r\n          },\r\n        },\r\n      })(TextField);\r\n    return (\r\n        <Container>\r\n            <ProfileDetailsContainer>\r\n                <StyledBadge color=\"secondary\" badgeContent=\" \" anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}>\r\n                    {rectangle}\r\n                </StyledBadge>\r\n                <ProfileDetails>\r\n                    <ProfileName>Bryan Lontoc</ProfileName>\r\n                    <ActiveState>Active</ActiveState>\r\n                </ProfileDetails>\r\n            </ProfileDetailsContainer>\r\n            <CustomTextField\r\n                id=\"outlined-required\"\r\n                placeholder=\"Update your status\"\r\n            />\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`Pause notifications`}/>\r\n            <BodyIconsComponent icons={<EventBusyIcon/>} labels={`Set yourself as away`}/>\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`Saved items`}/>\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`View profile`}/>\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`Notifications`}/>\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`Preferences`}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import styled, { keyframes } from 'styled-components'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MaterialTextField from '@mui/material/TextField';\r\nimport MaterialAvatar from '@mui/material/Avatar';\r\nimport MaterialAddIcon from '@mui/icons-material/Add';\r\nimport MaterialLockIcon from '@mui/icons-material/Lock';\r\nimport MaterialButton from '@mui/material/Button'\r\nimport MaterialAvatarGroup from '@mui/material/AvatarGroup';\r\nimport MaterialSendIcon from '@mui/icons-material/Send';\r\nimport MaterialTypography from '@mui/material/Typography';\r\nimport { fadeIn } from 'react-animations';\r\nimport MaterialBox from '@mui/material/Box';\r\n\r\n\r\nconst fadeInAnimation = keyframes`${fadeIn}`;\r\n\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    avatarSize: {\r\n        '& .MuiAvatar-root.MuiAvatar-rounded.MuiAvatar-colorDefault.MuiAvatarGroup-avatar.css-16fxgir-MuiAvatar-root-MuiAvatarGroup-avatar': {\r\n            width: '24px',\r\n            height: '24px',\r\n            fontSize: '0.75rem',\r\n            background: 'unset',\r\n            fontFamily: 'Source Sans Pro',\r\n            color: '#34495e'\r\n        }\r\n    },\r\n}))\r\n\r\nexport const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '3px solid #34495e',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\nexport const Container = styled.div `\r\n    background: #f6f7fb;\r\n    display: flex;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    max-width: 1024px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    animation: 1s ${fadeInAnimation};\r\n    @media (min-width: 768px) {\r\n        height: 100vh;\r\n    }\r\n`\r\nexport const LogoContainer = styled.div `   \r\n    padding: 1.0625rem 0.6875rem;\r\n    background-color: unset;\r\n    @media (min-width: 768px) {\r\n        background-color: #34495e;\r\n        margin-right: 1.25rem;\r\n    }\r\n`\r\nexport const Logo = styled.img `\r\n    width: 38px;\r\n    height: 38px;\r\n    border-radius: 5px;\r\n`\r\nexport const ContentContainer = styled.div `\r\n    width: 100%;\r\n    height: 100vh;\r\n    @media (min-width: 768px) {\r\n        display: flex;\r\n        height: unset;\r\n    }\r\n` \r\nexport const ContentChannelSection = styled.div `\r\n    display: flex; \r\n    background-color: #34495e;\r\n    align-items: center;\r\n    @media (min-width: 768px) {\r\n        display: unset;\r\n        width: 30%;\r\n        background-color: unset;\r\n        align-items: unset;\r\n    }\r\n`\r\nexport const ContentChannelTitle = styled.div `\r\n    color: #fff;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    font-weight: bold;\r\n    font-size: 1.25rem;\r\n    @media (min-width: 768px) {\r\n        color: #34495e;\r\n        padding: 1.4375rem 0rem 1.0625rem 0rem;\r\n    }\r\n`\r\nexport const ContentChannelSearchBox = styled.div `\r\n    border: solid 1px #979797;\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 0.625rem;\r\n    width: 24.125rem;\r\n    height: 1.9375rem;\r\n`\r\nexport const TextField = styled(MaterialTextField) `\r\n    font-size: 0.75rem;\r\n    width: 100%;\r\n`\r\nexport const ContentUserProfileContainer = styled.div `\r\n    cursor: pointer;\r\n    margin-left: auto;\r\n    margin-right: 0.6875rem;\r\n    @media (min-width: 768px) {\r\n        margin-left: unset;\r\n    }\r\n`\r\nexport const Avatar = styled(MaterialAvatar) `\r\n    width: 38px !important;\r\n    height: 38px !important;\r\n    margin-left: auto;\r\n`\r\nexport const ChannelsAndMessagesContainer = styled.div `\r\n    padding: 0 1.3125rem;\r\n    @media (min-width: 768px) {\r\n        padding: 0;\r\n    }\r\n`\r\nexport const ChannelsTitleHeader = styled.div `\r\n    font-size: 1.125rem;\r\n    color: #34495e;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    font-weight: bold;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-top: 2.125rem; \r\n`\r\nexport const AddIcon = styled(MaterialAddIcon) `\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n`\r\nexport const ChannelsContainer = styled.div `\r\n    height: calc(100vh - 25rem);\r\n    overflow-y: auto;\r\n    \r\n    /* &:hover {\r\n    //     overflow-y: scroll;\r\n    //     transition: overflow-y 2s;\r\n    //     transition-timing-function: ease-in-out;\r\n    // } */\r\n    /* width */\r\n    &::-webkit-scrollbar {\r\n    width: 10px;\r\n    }\r\n    /* Track */\r\n    &::-webkit-scrollbar-track {\r\n    background: #f1f1f1; \r\n    }\r\n    \r\n    /* Handle */\r\n    &::-webkit-scrollbar-thumb {\r\n    background: #888; \r\n    }\r\n\r\n    /* Handle on hover */\r\n    &::-webkit-scrollbar-thumb:hover {\r\n    background: #555; \r\n    }\r\n    @media (min-width: 768px) {\r\n        height: calc(100vh - 31rem);\r\n    }   \r\n`\r\nexport const Channel = styled.div `\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: #85929e;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    padding: 0.6875rem 0rem 0.6875rem 1.9375rem;\r\n    margin-top: 0.8125rem;\r\n    background: ${props => props.active ? '#fff' : '' };\r\n    border-radius: 7px;\r\n    border-left: ${props => props.active ? '5px solid #9b59b6' : \"\" };\r\n    cursor: pointer;\r\n`\r\nexport const LockIcon = styled(MaterialLockIcon) `\r\n    font-size: 0.875rem !important;\r\n`\r\nexport const UserChatBox = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.625rem;\r\n    font-weight: 600;\r\n    color: #85929e;\r\n    margin-top: 1.25rem;\r\n    cursor: pointer;\r\n`\r\nexport const UserAvatar = styled(MaterialAvatar) `\r\n    width: 1.25rem !important;    \r\n    height: 1.25rem !important;\r\n    font-size: 0.8rem !important;\r\n`\r\nexport const ContentChatBoxSection = styled.div `\r\n    width: 75%;\r\n    padding-left: 25px;\r\n    position: relative;\r\n`\r\nexport const ContentChatBoxHeader = styled.div `\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1.125rem 1rem 1.125rem 0;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n`\r\nexport const ContentChatBoxBody = styled.div `\r\n    background: #fff;\r\n    padding: 1.5625rem 1.0625rem 1.625rem 2rem;\r\n    height: calc(100vh - 137px);\r\n    border-radius: 0.625rem 0 0 0;\r\n`\r\nexport const ContentChatBoxChannelTitle = styled.div `\r\n    font-weight: bold;\r\n    color: #34495e;\r\n    font-size: 1.125rem;\r\n    margin-left: 0.5rem;\r\n    @media (min-width: 768px) {\r\n        margin-left: unset;\r\n    }\r\n`\r\nexport const ChatBoxAddUserContainer = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    @media (min-width: 768px) {\r\n        width: unset;\r\n        justify-content: space-between;\r\n    }\r\n`\r\nexport const Button = styled(MaterialButton) `\r\n    font-weight: bold !important;\r\n    background: #34495e !important;\r\n    border-radius: 7px !important;\r\n    width: 120px;\r\n    height: 38px;\r\n`\r\nexport const AvatarGroup = styled(MaterialAvatarGroup) `\r\n    background: unset;  \r\n    display: flex;\r\n    justify-content: center;\r\n`\r\nexport const AvatarSmallGroup = styled(MaterialAvatar) `\r\n    width: 24px !important;\r\n    height: 24px !important;\r\n    font-size: 0.8rem !important;\r\n`\r\nexport const AvatarnButton = styled.div `\r\n    display: flex;\r\n    gap: 1.75rem;\r\n    align-items: center;\r\n    margin-left: auto;\r\n    @media (min-width: 768px) {\r\n        margin-left: unset;\r\n    }\r\n`\r\nexport const ChatInput = styled.div `\r\n    border: solid 1px #979797;\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 0.625rem;\r\n    margin-top: 20px;\r\n`\r\nexport const ChatsContainer = styled.div `\r\n    display: flex;\r\n    font-weight: bold;\r\n    font-size: 0.875rem;\r\n    color: #85929e;\r\n    flex-direction: column;\r\n    gap: 17px;\r\n    max-height: calc(100vh - 12rem);\r\n    overflow-y: auto;\r\n    \r\n    /* &:hover {\r\n    //     overflow-y: scroll;\r\n    //     transition: overflow-y 2s;\r\n    //     transition-timing-function: ease-in-out;\r\n    // } */\r\n    /* width */\r\n    &::-webkit-scrollbar {\r\n    width: 10px;\r\n    }\r\n    /* Track */\r\n    &::-webkit-scrollbar-track {\r\n    background: #f1f1f1; \r\n    }\r\n    \r\n    /* Handle */\r\n    &::-webkit-scrollbar-thumb {\r\n    background: #888; \r\n    }\r\n\r\n    /* Handle on hover */\r\n    &::-webkit-scrollbar-thumb:hover {\r\n    background: #555; \r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        max-height: calc(100vh - 16rem);\r\n    }\r\n`\r\nexport const ChatUsernTime = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nexport const ChatUserName = styled.div `\r\n    cursor: pointer;\r\n`\r\nexport const ChatUserTime = styled.div `\r\n    font-weight: 400 !important;\r\n    font-size: 0.7rem;\r\n`   \r\nexport const ChatsUserProfile = styled.div `\r\n    display: flex;\r\n    flex-direction: ${props => props.right ? 'row-reverse' : ''};\r\n    gap: 9px;\r\n    padding: 0 1rem 0 0;\r\n    margin-top: 0.8rem;\r\n`\r\nexport const ChatMessageContainer = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 3px;\r\n    width: 80%;\r\n    word-wrap: break-word;\r\n    text-align: ${props => props.right ? 'right' : ''};\r\n    @media (min-width: 768px) {\r\n        width: calc(100vh - 80%);\r\n    }\r\n`\r\nexport const ChatMessages = styled.span `\r\n    font-size: 0.875rem;\r\n    font-weight: normal;\r\n    /* background: #e8edea; */\r\n    border-radius: 8px;\r\n    padding: 0.5rem\r\n`\r\nexport const ChatsMessageandChatInput = styled.div `\r\n    position: absolute;\r\n    bottom: 26px;\r\n    right: 18px;\r\n    left: 22px;\r\n    @media (min-width: 768px) {\r\n        left: 55px;\r\n        right: 26px;\r\n    }\r\n`\r\nexport const UidInputContainer = styled.div `\r\n    border: solid 1px #979797;\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 0.625rem;\r\n    margin-bottom: 1rem;\r\n`\r\n\r\nexport const UsersContainer = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: calc(100vh - 24rem);\r\n    overflow-y: auto;\r\n    \r\n    /* // &:hover {\r\n    //     overflow-y: auto;\r\n    //     transition: overflow-y 2s;\r\n    //     transition-timing-function: ease-in-out;\r\n    // } */\r\n    /* width */\r\n    &::-webkit-scrollbar {\r\n    width: 10px;\r\n    }\r\n    /* Track */\r\n    &::-webkit-scrollbar-track {\r\n    background: #f1f1f1; \r\n    }\r\n    \r\n    /* Handle */\r\n    &::-webkit-scrollbar-thumb {\r\n    background: #888; \r\n    }\r\n\r\n    /* Handle on hover */\r\n    &::-webkit-scrollbar-thumb:hover {\r\n    background: #555; \r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        height: calc(100vh - 24rem);\r\n    }\r\n`\r\nexport const User = styled.span `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-weight: 600;\r\n    color: #85929e;\r\n    cursor: pointer;\r\n    padding: 1rem 0.5rem;\r\n    width: 100%;\r\n`\r\nexport const AddIconAddUser = styled(AddIcon) `\r\n    background: #34495e;\r\n    border-radius: 4px;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`\r\nexport const AddUserUsersContainer = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n`\r\nexport const ButtonAddUser = styled(Button) `\r\n    color: #fff !important;\r\n    width: unset;\r\n    text-transform: unset !important;\r\n`\r\nexport const SendIcon = styled(MaterialSendIcon) `\r\n    color: #34495e !important;\r\n    cursor: pointer;\r\n    &:hover {\r\n        opacity: 0.9\r\n    }\r\n`\r\nexport const Typography = styled(MaterialTypography) `\r\n    font-size: 0.8rem !important;\r\n`\r\nexport const UserName = styled.span `\r\n    font-weight: 600;\r\n    color: #85929e;\r\n`\r\nexport const UserDetailsContainer = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: right;\r\n`\r\nexport const UserID = styled(UserName) `\r\n    font-size: 0.8rem;\r\n`\r\nexport const InviteUsersTitle = styled.div `\r\n    color: #979797;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    font-weight: bold;\r\n    font-size: 1rem;\r\n`\r\nexport const ButtonAddChannel = styled(Button) `\r\n    margin-top: 1rem !important;\r\n    width: 100% !important;\r\n`\r\nexport const Box = styled(MaterialBox) `\r\n    width: 17rem !important;\r\n    height: calc(100vh - 7rem);\r\n    @media (min-width: 768px) {\r\n        width: 25rem !important;\r\n        height: unset;\r\n    }\r\n`\r\nexport const BoxDM = styled(Box) `\r\n    height: calc(100vh - 15rem);\r\n    @media (min-width: 768px) {\r\n        height: unset;\r\n    }\r\n`","export default __webpack_public_path__ + \"static/media/sampleLogo.4d1763d3.png\";","import {useState} from 'react';\r\n\r\n// Hook\r\nfunction useSessionStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from session storage by key\r\n        const item = window.sessionStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to sessionStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to session storage\r\n        window.sessionStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useSessionStorage;","import {useState} from 'react';\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useLocalStorage;","import {useContext, useRef, useEffect, useState} from 'react'\r\nimport {AppContext} from '../Global/AppContext'\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport {retrieveAllUsersAPI, \r\n    retrieveAllChannelsAPI, \r\n    retrieveAChannelAPI,\r\n    inviteUserToChannelAPI, \r\n    createAChannelAPI, \r\n    retrieveAllMessagesinaChannelAPI, \r\n    retrieveAllMessageswithaUserAPI,\r\n    createAMessageAPI } from '../api/api'\r\n\r\nlet int1;\r\nlet int2;\r\nlet int3;\r\nlet int4;\r\n\r\n\r\n\r\nconst useHooks = () => {\r\n    const {isLogin, setIsLogin, loginUser, setLoginUser} = useContext(AppContext)\r\n    const addUserEmail = useRef('')\r\n    const userID = useRef('')\r\n    const [channels, setChannels] = useState('')\r\n    const [selectChannel, setSelectChannel] = useState('')\r\n    const [selectUser, setSelectUser] = useState('')\r\n    const [users, setUsers] = useState('')\r\n    const [searchUserDM, setSearchUserDM] = useState('')\r\n    const [searchResultsDM, setSearchResultsDM] = useState('')\r\n    const chatMessage = useRef('')\r\n    const [allMessages, setAllMessages] = useState(``)\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        message: '',\r\n        warning: false,\r\n    })\r\n    const [duplicateForChannel, setDuplicateForChannel] = useState(false);\r\n    const [duplicateForUser, setDuplicateForUser] = useState(false);\r\n    const [query, setQuery] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n    const [openDM, setOpenDM] = useState(false)\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [openAddChannel, setOpenAddChannel] = useState(false);\r\n    const channelName = useRef('')\r\n    const [channel, setChannel] = useState()\r\n    const matchesMD = useMediaQuery('(min-width: 768px)');\r\n\r\n\r\n    // Retrieve All Users\r\n    const handleOpen = async() => {\r\n        setOpen(true)\r\n        if(users.data?.data){\r\n            setIsLoading(false)\r\n        } else {\r\n            setIsLoading(true)\r\n            retrieveAllUsersAPI(loginUser, setIsLoading, setUsers) \r\n        }\r\n    };\r\n    // Function for adding a user in a channel\r\n    const handleAddUser = async(id) => {\r\n        setIsLoading(true)\r\n        setOpen(false)\r\n        inviteUserToChannelAPI(selectChannel, id, loginUser, state, setState, setIsLoading, setOpen)\r\n    }\r\n    const handleCloseAddUserModal = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        };\r\n        setState({\r\n          ...state, open: false,\r\n        })\r\n    };\r\n    const handleClose = () => {\r\n        return (\r\n            setOpen(false), \r\n            setOpenDM(false),\r\n            setOpenAddChannel(false)\r\n        )\r\n    };\r\n    \r\n\r\n    // Pop Over\r\n    const handleClickPopOver = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClosePopOver = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const openPopOver = Boolean(anchorEl);\r\n    const idPopOver = open ? 'simple-popover' : undefined;\r\n    // Pop Over\r\n\r\n\r\n    // Add Channel Modal\r\n    const handleOpenAddChannel = async() => {\r\n        setOpenAddChannel(true)\r\n        if(users.data?.data){\r\n            setIsLoading(false)\r\n        } else {\r\n            setIsLoading(true)\r\n            retrieveAllUsersAPI(loginUser, setIsLoading, setUsers)\r\n        }\r\n    };\r\n    // Add Channel Modal\r\n\r\n\r\n    // Retrieve all messages in a Channel\r\n    const retrieveMessagesinChannel = async(data) => {\r\n        await axios.all([\r\n            retrieveAllMessagesinaChannelAPI(data, loginUser, setAllMessages)\r\n        ])\r\n    }\r\n\r\n    // For Real Time Fetching Message in Channel\r\n    const intervalRetrieveMessagesinChannel = (data) => {\r\n        clearTimeout(int1)\r\n        clearTimeout(int2)\r\n        setSelectUser('')\r\n        setSelectChannel(data)\r\n        retrieveMessagesinChannel(data)\r\n        setDuplicateForChannel(!duplicateForChannel)\r\n        if(duplicateForChannel) {\r\n            int3 = setInterval(() => {\r\n                retrieveMessagesinChannel(data)\r\n            }, 1500);\r\n            clearTimeout(int4)\r\n        } else {\r\n            int4 = setInterval(() => {\r\n                retrieveMessagesinChannel(data)\r\n            }, 1500);\r\n            clearTimeout(int3)\r\n        }\r\n    }\r\n\r\n    // Retrieve all messages in a User\r\n    const retrieveMessagesinUser = async(data) => {\r\n        retrieveAllMessageswithaUserAPI(data, loginUser,setAllMessages)\r\n    }\r\n\r\n    // For Real Time Fetching Message in User\r\n    const intervalRetrieveMessagesinUser = (data) => {\r\n        clearTimeout(int3)\r\n        clearTimeout(int4)\r\n        setSelectChannel('')\r\n        setSelectUser(data)\r\n        handleClose();\r\n        retrieveMessagesinUser(data)\r\n        setDuplicateForUser(!duplicateForUser)\r\n        if(duplicateForUser) {\r\n            int1 = setInterval(() => {   \r\n                retrieveMessagesinUser(data)\r\n            }, 1500);    \r\n            clearTimeout(int2)\r\n        } else {\r\n            int2 = setInterval(() => {   \r\n                retrieveMessagesinUser(data)\r\n            }, 1500);    \r\n            clearTimeout(int1)\r\n        }\r\n    }\r\n    \r\n\r\n    // Create a Message in a channel || user\r\n    const createAMessage = async() => {\r\n        createAMessageAPI(selectChannel, selectUser, chatMessage, loginUser, setSelectChannel, retrieveMessagesinChannel, setSelectUser, retrieveMessagesinUser)\r\n        chatMessage.current.value = ''\r\n    }\r\n\r\n    // Create a Channel\r\n    const createAChannel = async(data) => {\r\n        createAChannelAPI(data, channelName, loginUser, state, setState, setIsLoading, setOpen, isLogin, setChannels, setOpenAddChannel) \r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        setSelectChannel('')\r\n        setSelectUser('')\r\n        axios.all([\r\n            // Retrieve All Channels where user was invited\r\n            retrieveAllChannelsAPI(loginUser, isLogin, setChannels),\r\n            retrieveAllUsersAPI(loginUser, setIsLoading, setUsers)\r\n        ])\r\n        \r\n        if(channels){\r\n            setSelectChannel(channels[0])\r\n        }\r\n    }, [])\r\n\r\n\r\n    // Logout a user \r\n    const handleLogout = () => {\r\n        setIsLogin(false)\r\n        Cookies.remove('user')\r\n        setLoginUser({});\r\n    }\r\n\r\n    \r\n    const getFilteredItems = (query, users) => {\r\n        if(!query) {\r\n            return null;\r\n        }\r\n        else if (query.toLowerCase() === 'all') {\r\n            return users?.data?.data;\r\n        }\r\n        return users.data?.data.filter((user) => user.uid.includes(query))\r\n    }\r\n\r\n    const handleOpenDM = () => {\r\n        setOpenDM(true)\r\n        if(users.data?.data){\r\n            setIsLoading(false)\r\n        } else {\r\n            setIsLoading(true)\r\n            retrieveAllUsersAPI(loginUser, setIsLoading, setUsers)\r\n        }\r\n    };\r\n    const filteredItems = getFilteredItems(query, users)\r\n    const updateQuery = (e) => setQuery(e?.target?.value);\r\n    const debounceOnChange = debounce(updateQuery, 500)\r\n\r\n\r\n\r\n    return {\r\n        loginUser,\r\n        addUserEmail,\r\n        userID,\r\n        searchUserDM,\r\n        searchResultsDM,\r\n        allMessages,\r\n        isLoading,\r\n        handleOpen,\r\n        handleAddUser,\r\n        handleCloseAddUserModal,\r\n        openAddChannel,\r\n        handleClickPopOver,\r\n        handleClosePopOver,\r\n        openPopOver,\r\n        idPopOver,\r\n        handleOpenAddChannel,\r\n        intervalRetrieveMessagesinChannel,\r\n        intervalRetrieveMessagesinUser,\r\n        createAMessage,\r\n        handleLogout,\r\n        openDM,\r\n        handleOpenDM,\r\n        filteredItems,\r\n        debounceOnChange,\r\n        channels,\r\n        selectChannel,\r\n        selectUser,\r\n        users,\r\n        chatMessage,\r\n        open,\r\n        handleClose,\r\n        query,\r\n        anchorEl,\r\n        state,\r\n        channelName,\r\n        createAChannel,\r\n        matchesMD,\r\n        channel\r\n    }\r\n}\r\n\r\nexport default useHooks","import React from 'react'\r\nimport useSessionStorage from '../helpers/useSessionStorage'\r\nimport useLocalStorage from '../helpers/useLocalStorage'\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = (props) => {\r\n    const [isLogin, setIsLogin] = useSessionStorage('isLogin', '');\r\n    const [loginUser, setLoginUser] = useLocalStorage('loginUser', '')\r\n    const state = {\r\n        isLogin,\r\n        loginUser\r\n    }\r\n\r\n    const func = {\r\n        setIsLogin,\r\n        setLoginUser\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={{ ...state, ...func }}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppProvider;","import axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nlet url = `http://206.189.91.54/api/v1`\r\n\r\n// Creating User Session\r\nexport const creatingUserSessionAPI = async(email, password, state, setState, setLoginUser, setIsLogin, history) => {\r\n    await axios({\r\n        url: `${url}/auth/sign_in`,\r\n        data: {\r\n            'email': email.current.value,\r\n            'password': password.current.value,\r\n        },\r\n        headers: {},\r\n        method: 'POST'\r\n        })\r\n    .then((res) => \r\n    {\r\n        if(res.status === 200){     \r\n            Cookies.set('user', 'loginTrue', { expires: 1 })\r\n            setState({...state, \r\n            open: true,\r\n            response: res?.data,\r\n            })\r\n            setLoginUser(res)\r\n            setIsLogin(true)\r\n        }\r\n        setTimeout(() => {\r\n            setState({...state, isLoading: false})\r\n            history.push(`/app/${res.data?.data.id}`)\r\n        },)\r\n    } \r\n    )\r\n    .catch((err) => \r\n    {\r\n        console.log({err})\r\n        const { errors } = err.response.data;\r\n        if(err.response.status === 401) {\r\n            setState({...state, \r\n                open: true,\r\n                isLoading: false,\r\n                responseMessage: errors[errors.length - 1],\r\n                warning: true\r\n            })\r\n        } \r\n        else {\r\n            setState({...state, \r\n                open: true,\r\n                isLoading: false,\r\n                responseMessage: `Internal Server Error`,\r\n                warning: true\r\n            })\r\n        } \r\n    }\r\n    )\r\n}\r\n\r\n// User Registration\r\nexport const userRegistrationAPI = async(email, password, retypePassword, state, setState, history) => {\r\n    await axios({\r\n        url: `${url}/auth`,\r\n        data: {\r\n          'email': email.current.value,\r\n          'password': password.current.value,\r\n          'password_confirmation': retypePassword.current.value,\r\n        },\r\n        headers: {},\r\n        method: 'POST'\r\n      })\r\n      .then((res) => \r\n        {\r\n            if(res.status === 200){\r\n                setState({...state, \r\n                  open: true,\r\n                  loading: false,\r\n                  response: res,\r\n                  responseMessage: `Registered successfully!`,\r\n                  warning: false\r\n                })\r\n                setTimeout(() => {\r\n                  history.push('/login')\r\n                }, 1500)\r\n            }\r\n        },\r\n      )\r\n      .catch((err) =>\r\n        { \r\n          const {full_messages} = err.response.data?.errors;\r\n          console.log({full_messages})\r\n          if(err.response.status === 422) {\r\n            setState({...state, \r\n              open: true,\r\n              loading: false,\r\n              response: err.response, \r\n              responseMessage: full_messages[full_messages.length - 1], \r\n              warning: true\r\n            })\r\n          }\r\n        }\r\n      )\r\n}\r\n\r\n// Retrieve All Users\r\nexport const retrieveAllUsersAPI = async(loginUser, setIsLoading, setUsers) => {\r\n    await axios({\r\n        url: `${url}/users`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n    })  \r\n    .then((res) => \r\n        {\r\n            if(res.status === 200) {\r\n                setIsLoading(false)\r\n                setUsers(res)\r\n            } \r\n        }\r\n    )\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n\r\n// Retrieve all channels\r\nexport const retrieveAllChannelsAPI = async(loginUser, isLogin, setChannels) => {\r\n    await axios({\r\n        url: `${url}/channels`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n        }) \r\n    .then((res) => \r\n        {\r\n            if(isLogin){\r\n                setChannels(res?.data.data)\r\n            }\r\n        }\r\n    )\r\n    .catch((err) => {\r\n        if(!isLogin){\r\n            return\r\n        } else {\r\n            console.error('Error in main page', err)\r\n        }\r\n    })\r\n}\r\n\r\n// Retrieve a Channel\r\nexport const retrieveAChannelAPI = async(data, loginUser, isLogin, setChannel, users) => {\r\n    axios({\r\n        url: `${url}/channels/${data.id}`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n        }) \r\n    .then((res) => \r\n        {\r\n            if(isLogin){\r\n                setChannel(res?.data.data.channel_members.map((channel) => {return users.data?.data.filter((user) => {return user.id === channel.user_id})}))\r\n            }\r\n        }\r\n    )\r\n    .catch((err) => {\r\n        if(!isLogin){\r\n            return\r\n        } else {\r\n            console.error('Error in main page', err)\r\n        }\r\n    })\r\n}\r\n\r\n// Invite User to a channel\r\nexport const inviteUserToChannelAPI = async(selectChannel, id, loginUser, state, setState, setIsLoading, setOpen) => {\r\n    await axios({\r\n        url: `${url}/channel/add_member`,\r\n        data: {\r\n            'id': selectChannel.id,\r\n            'member_id': id,\r\n        },\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'POST'\r\n    })  \r\n    .then((res) => \r\n        {   \r\n            if(res.status === 200) {\r\n                // setTimeout(() => {\r\n                        if(res.data.data?.id) {\r\n                            setState({...state, \r\n                                open: true, \r\n                                message: `Added Successfully!`, \r\n                                warning: false\r\n                            })\r\n                            setIsLoading(false)\r\n                            setOpen(false)\r\n                        } \r\n                        else {\r\n                            if(res.data?.errors[0] === `User is already a member of this channel!`){\r\n                                setState({...state, \r\n                                    open: true, \r\n                                    message: `User is already a member of this channel!`, \r\n                                    warning: true\r\n                                })\r\n                                setIsLoading(false)\r\n                                setOpen(false)\r\n                            } else {\r\n                                setState({...state, \r\n                                    open: true, \r\n                                    message: `Invalid user`, \r\n                                    warning: true\r\n                                })\r\n                                setIsLoading(false)\r\n                                setOpen(false)\r\n                            } \r\n                        } \r\n                // }, 1000);\r\n            }\r\n        }\r\n    )\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n// Create a Channel\r\nexport const createAChannelAPI = async(data, channelName, loginUser, state, setState, setIsLoading, setOpen, isLogin, setChannels, setOpenAddChannel) => {\r\n    await axios({\r\n        url: `${url}/channels`,\r\n        data: {\r\n            'name': channelName.current.value,\r\n            'user_ids': data\r\n        },\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'POST'\r\n    })\r\n    .then((res) => \r\n        {\r\n            if(res.data.data?.id) {\r\n                setState({...state, \r\n                    open: true, \r\n                    message: `Added Successfully!`, \r\n                    warning: false\r\n                })\r\n                setIsLoading(false)\r\n                setOpen(false)\r\n                retrieveAllChannelsAPI(loginUser, isLogin, setChannels)\r\n                setOpenAddChannel(false)\r\n                channelName.current.value = '';\r\n            } \r\n            else {\r\n                if(res.data?.errors[0] === `Name has already been taken`){\r\n                    setState({...state, \r\n                        open: true, \r\n                        message: `Name has already been taken!`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                } else if (res.data?.errors[0] === `Name is too short (minimum is 3 characters)`) {\r\n                    setState({...state, \r\n                        open: true, \r\n                        message: `Name is too short (minimum is 3 characters)`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                } else if (res.data?.errors[0] === `Name is too long (maximum is 15 characters)`) {\r\n                    setState({...state, \r\n                        open: true, \r\n                        message:  `Name is too long (maximum is 15 characters)`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                } else if (res.data?.errors.length === 2) {\r\n                    setState({...state, \r\n                        open: true, \r\n                        message:  `Name can't be blank.  Name is too short (minimum is 3 characters)`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                }  else {\r\n                    setState({...state, \r\n                        open: true, \r\n                        message:  `Error`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                }\r\n            } \r\n        }\r\n    )   \r\n    .catch((err) => {console.log(err)})\r\n}\r\n\r\n// Retrieve All Messages in a Channel\r\nexport const retrieveAllMessagesinaChannelAPI = async(data, loginUser, setAllMessages) => {\r\n    await axios({\r\n        url: `${url}/messages?receiver_id=${data.id}&receiver_class=Channel`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n        }) \r\n    .then((res) => \r\n        {\r\n            if(res?.status === 200) {\r\n                setAllMessages(res)\r\n            } \r\n        }\r\n    )   \r\n    .catch((err) => {console.log(err)})\r\n}\r\n\r\n// Retrieve All Messages with a User\r\nexport const retrieveAllMessageswithaUserAPI = async(data, loginUser,setAllMessages) => {\r\n    await axios({\r\n        url: `${url}/messages?receiver_id=${data.id}&receiver_class=User`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n        }) \r\n    .then((res) => \r\n        {\r\n            if(res?.status === 200) {\r\n                setAllMessages(res)\r\n            } \r\n        }\r\n    )   \r\n    .catch((err) => {console.log(err)})\r\n}\r\n\r\n// Create a Message in a channel || user\r\nexport const createAMessageAPI = async(selectChannel, selectUser, chatMessage, loginUser, setSelectChannel, retrieveMessagesinChannel, setSelectUser, retrieveMessagesinUser) => {\r\n    await axios({\r\n        url: `${url}/messages`,\r\n        data: {\r\n            'receiver_id': selectChannel.id || selectUser.id,\r\n            'receiver_class': selectChannel ? 'Channel' : 'User',\r\n            'body': chatMessage.current.value,\r\n        },\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'POST'\r\n    })\r\n    .then((res) => \r\n        {\r\n            if(selectChannel){\r\n                setSelectChannel(selectChannel)\r\n                retrieveMessagesinChannel(selectChannel)\r\n            } \r\n            else if (selectUser) {\r\n                setSelectUser(selectUser)\r\n                retrieveMessagesinUser(selectUser)\r\n            }\r\n        }\r\n    )   \r\n    .catch((err) => {console.log(err)})\r\n}","\r\nexport const emailRemover = (email) => {\r\n    return email.split(\"@\")[0]\r\n}\r\n\r\nexport const convertStringtoArray = (string) => {\r\n    return string.split(\" \");\r\n}","\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\nimport { \r\n    TextField,\r\n    AddIcon, \r\n    ButtonAddChannel, \r\n    UidInputContainer, \r\n    UsersContainer, \r\n    User, \r\n    InviteUsersTitle, \r\n    ContentContainer, \r\n    AddUserUsersContainer, \r\n    ContentUserProfileContainer, \r\n    ButtonAddUser, \r\n    Avatar,\r\n    AvatarGroup,\r\n    AvatarSmallGroup,\r\n    Box\r\n} from './components'\r\nimport {emailRemover} from '../helpers/helpers'\r\nimport {useState} from 'react'\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Index = (props) => {\r\n    const {\r\n        openAddChannel, \r\n        handleCloseChannel, \r\n        createAChannel, \r\n        channelName, \r\n        inputUsers, \r\n        filteredItems,\r\n        debounceOnChange,\r\n        classes,\r\n        matchesMD\r\n    } = props;\r\n\r\n    const [usersToAdd, setUsersToAdd] = useState([])\r\n    const [openPreAddedUsersmodal, setOpenPreAddedUsersmodal] = useState(false)\r\n\r\n    \r\n\r\n    const addUsersToChannel = (user) => {\r\n        setUsersToAdd([...usersToAdd, user])\r\n    }\r\n    const handleOpenPreAddedUsers = () => {\r\n        setOpenPreAddedUsersmodal(true)\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        return (\r\n            setOpenPreAddedUsersmodal(false)\r\n        )\r\n    };\r\n\r\n    const deleteAddedUser = (index) => {\r\n        usersToAdd.splice(index, 1)\r\n        setUsersToAdd([...usersToAdd])\r\n    }\r\n\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                keepMounted\r\n                open={openAddChannel}\r\n                onClose={handleCloseChannel}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Create a Channel\r\n                </Typography>\r\n                <Typography id=\"keep-mounted-modal-description\" sx={{ mt: 2 }}>\r\n                    <UidInputContainer>\r\n                        <TextField \r\n                            id=\"standard-basic\"\r\n                            placeholder=\"e.g Work Channel\" \r\n                            variant=\"standard\" \r\n                            InputProps={{ \r\n                                disableUnderline: true, \r\n                                classes: {\r\n                                input: classes.resize,\r\n                            }, }}\r\n                            inputRef={channelName}\r\n                        />\r\n                    </UidInputContainer>\r\n                    <InviteUsersTitle>Invite users to the new channel</InviteUsersTitle>\r\n                    <UidInputContainer>\r\n                        <TextField \r\n                            id=\"standard-basic\"\r\n                            variant=\"standard\" \r\n                            InputProps={{ \r\n                                disableUnderline: true, \r\n                                classes: {\r\n                                input: classes.resize,\r\n                            }, }}\r\n                            inputRef={inputUsers}\r\n                            onChange={debounceOnChange}\r\n                            placeholder=\"user ID\"\r\n                        />\r\n                    </UidInputContainer>\r\n                    <InviteUsersTitle>Note: Type 'all' to load all users</InviteUsersTitle>\r\n                    <AvatarGroup max={5} variant=\"rounded\" className={classes.avatarSize} style={{cursor: 'pointer'}} onClick={handleOpenPreAddedUsers}>\r\n                        {usersToAdd.map(user => {\r\n                            return (\r\n                                <AvatarSmallGroup alt={emailRemover(user.uid).toUpperCase()} src=\"/static/images/avatar/1.jpg\" variant=\"rounded\" />\r\n                            )\r\n                        })}\r\n                    </AvatarGroup>\r\n                    <UsersContainer>\r\n                        {filteredItems === null ? '' :\r\n                            filteredItems.length > 0 ?\r\n                                filteredItems.map((user, index) => {\r\n                                    return (\r\n                                    <AddUserUsersContainer key={index} onClick={() => addUsersToChannel(user)}>\r\n                                        <ContentUserProfileContainer>\r\n                                            <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                                {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                            </Avatar>\r\n                                        </ContentUserProfileContainer>\r\n                                        <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}{matchesMD && <ButtonAddUser><AddIcon /></ButtonAddUser>}</User>\r\n                                    </AddUserUsersContainer>\r\n                                )})\r\n                                :\r\n                                <h1 style={{textAlign: 'center'}}>No user available</h1>\r\n                        }\r\n                    </UsersContainer>\r\n                    <ButtonAddChannel variant=\"contained\" startIcon={<AddIcon />} onClick={() => createAChannel(usersToAdd)}>Add Channel</ButtonAddChannel>\r\n                </Typography>\r\n                </Box>\r\n            </Modal> \r\n\r\n\r\n            <Modal\r\n                keepMounted\r\n                open={openPreAddedUsersmodal}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <Box sx={style} style={{maxHeight: '35rem',\r\n                    overflowY: 'auto',\r\n                    minHeight: '35rem'}}>\r\n                        {usersToAdd.map((user, index) => {\r\n                            return (\r\n                                <AddUserUsersContainer key={index}>\r\n                                    <ContentUserProfileContainer>\r\n                                        <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                            {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                    </ContentUserProfileContainer>\r\n                                    <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}<ButtonAddUser onClick={() => deleteAddedUser(index)}>Delete</ButtonAddUser></User>\r\n                                </AddUserUsersContainer>\r\n                            )\r\n                        })}\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import {\r\n    UidInputContainer,  \r\n    TextField, \r\n    UsersContainer, \r\n    User,\r\n    AddIconAddUser, \r\n    ContentUserProfileContainer,\r\n    Avatar,\r\n    AddUserUsersContainer,\r\n    ButtonAddUser,\r\n    InviteUsersTitle,\r\n    BoxDM\r\n} from './components'\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddUserComponent = (props) => {\r\n    const {\r\n        open,\r\n        handleClose,\r\n        style,\r\n        classes,\r\n        userID,\r\n        searchUser,\r\n        getSearchUser,\r\n        users,\r\n        emailRemover,\r\n        handleAddUser,\r\n        handleDebounceAddUser,\r\n        filteredItems,\r\n        debounceOnChange,\r\n        query,\r\n        matchesMD\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <>\r\n           <Modal\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <BoxDM sx={style}>\r\n                <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Add user\r\n                </Typography>\r\n                <Typography id=\"keep-mounted-modal-description\" sx={{ mt: 2 }}>\r\n                    {/* <form onSubmit={(e) => {\r\n                        // e.preventDefault();\r\n                        // handleAddUser(userID.current.value)\r\n                        // userID.current.value = ''\r\n                    }}> */}\r\n                        <UidInputContainer>\r\n                            <TextField \r\n                                id=\"standard-basic\"\r\n                                variant=\"standard\" \r\n                                type='text'\r\n                                InputProps={{ \r\n                                    disableUnderline: true, \r\n                                    classes: {\r\n                                    input: classes.resize,\r\n                                }, }}\r\n                                inputRef={userID}\r\n                                // value={searchUser}\r\n                                // onChange={getSearchUser}\r\n                                onChange={debounceOnChange}\r\n                                placeholder=\"user ID\"\r\n                            />\r\n                        </UidInputContainer>\r\n                    {/* </form> */}\r\n                    {/* <UsersContainer>\r\n                        {users.length > 1 ?\r\n                            users.map((user, index) => {\r\n                                return (\r\n                                <AddUserUsersContainer key={index}>\r\n                                    <ContentUserProfileContainer>\r\n                                        <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                            {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                    </ContentUserProfileContainer>\r\n                                    <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}<ButtonAddUser onClick={() => handleAddUser(user.id)}>Add</ButtonAddUser></User>\r\n                                </AddUserUsersContainer>\r\n                            )})\r\n                            :\r\n                            <h1 style={{textAlign: 'center'}}>No user available</h1>\r\n                        }\r\n                    </UsersContainer> */}\r\n                    <InviteUsersTitle>Note: Type 'all' to load all users</InviteUsersTitle>\r\n                    <UsersContainer>\r\n                        {filteredItems === null ? '' :\r\n                        filteredItems.length > 0 ?\r\n                            filteredItems.map((user, index) => {\r\n                                return (\r\n                                <AddUserUsersContainer key={index} onClick={() => handleAddUser(user.id)}>\r\n                                    <ContentUserProfileContainer>\r\n                                        <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                            {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                    </ContentUserProfileContainer>\r\n                                    <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}{matchesMD && <ButtonAddUser>Add</ButtonAddUser>}</User>\r\n                                </AddUserUsersContainer>\r\n                            )})\r\n                            :\r\n                            <h1 style={{textAlign: 'center'}}>No user available</h1>\r\n                        }\r\n                    </UsersContainer>\r\n                </Typography>\r\n                </BoxDM>\r\n            </Modal> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUserComponent\r\n","import React, {forwardRef} from 'react'\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\nconst Index = (props) => {\r\n    const {isOpen, close, message, status} = props;\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={isOpen} autoHideDuration={4000} \r\n                onClose={close} \r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}>\r\n                <Alert \r\n                    onClose={close} \r\n                    severity={status} sx={{ width: '100%' }}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import {\r\n    UidInputContainer,  \r\n    TextField, \r\n    UsersContainer, \r\n    User,\r\n    AddIconAddUser, \r\n    ContentUserProfileContainer,\r\n    Avatar,\r\n    AddUserUsersContainer,\r\n    ButtonAddUser,\r\n    InviteUsersTitle,\r\n    BoxDM\r\n} from './components'\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddUserComponent = (props) => {\r\n    const {\r\n        open,\r\n        handleClose,\r\n        style,\r\n        classes,\r\n        addUserEmail,\r\n        searchUser,\r\n        getSearchUser,\r\n        users,\r\n        emailRemover,\r\n        intervalRetrieveMessagesinUser,\r\n        debounceDMSearch,\r\n        setQuery,\r\n        filteredItems,\r\n        debounceOnChange,\r\n        matchesMD,\r\n        toggleDrawer\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n           <Modal\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <BoxDM sx={style}>\r\n                <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Direct message\r\n                </Typography>\r\n                <Typography id=\"keep-mounted-modal-description\" sx={{ mt: 2 }}>\r\n                    <UidInputContainer>\r\n                        <TextField \r\n                            id=\"standard-basic\"\r\n                            variant=\"standard\" \r\n                            InputProps={{ \r\n                                disableUnderline: true, \r\n                                classes: {\r\n                                input: classes.resize,\r\n                            }, }}\r\n                            inputRef={addUserEmail}\r\n                            // value={searchUser}\r\n                            // onChange={getSearchUser}\r\n                            // onChange={(e) => setQuery(e.target.value)}\r\n                            onChange={debounceOnChange}\r\n                            placeholder=\"user ID\"\r\n                        />\r\n                    </UidInputContainer>\r\n                    <InviteUsersTitle>Note: Type 'all' to load all users</InviteUsersTitle>\r\n                    <UsersContainer>\r\n                        {filteredItems === null ? '' :\r\n                        filteredItems.length > 0 ?\r\n                            filteredItems.map((user, index) => {\r\n                                return (\r\n                                <AddUserUsersContainer key={index} onClick={() => {return (intervalRetrieveMessagesinUser(user), toggleDrawer())}}>\r\n                                    <ContentUserProfileContainer>\r\n                                        <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                            {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                    </ContentUserProfileContainer>\r\n                                    <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}{matchesMD && <ButtonAddUser>message</ButtonAddUser>}</User>\r\n                                </AddUserUsersContainer>\r\n                            )})\r\n                            :\r\n                            <h1 style={{textAlign: 'center'}}>No user available</h1>\r\n                        }\r\n                    </UsersContainer>\r\n                </Typography>\r\n                </BoxDM>\r\n            </Modal> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUserComponent\r\n","import {\r\n    ChatsUserProfile, \r\n    ContentUserProfileContainer,\r\n    Avatar,\r\n    ChatMessageContainer,\r\n    ChatUsernTime,\r\n    ChatUserName,\r\n    ChatUserTime,\r\n    ChatMessages\r\n} from './components'\r\n\r\nconst ChatUserProfileComponent = (props) => {\r\n    const {\r\n        imgSrc,\r\n        initial,\r\n        chatUserName,\r\n        chatUserTime,\r\n        chatMessage,\r\n        loginUser,\r\n        data,\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n           <ChatsUserProfile right={loginUser.data.data?.uid === data.sender.uid}>\r\n                <ContentUserProfileContainer style={{marginLeft: 'unset'}}>\r\n                    <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src={imgSrc}>\r\n                        {initial}\r\n                    </Avatar>\r\n                </ContentUserProfileContainer>\r\n                <ChatMessageContainer right={loginUser.data.data?.uid === data.sender.uid}>\r\n                    <ChatUsernTime right={loginUser.data.data?.uid === data.sender.uid}>\r\n                        <ChatUserName>{chatUserName}</ChatUserName>\r\n                        <ChatUserTime>{chatUserTime}</ChatUserTime>\r\n                    </ChatUsernTime>\r\n                    <ChatMessages>{chatMessage}</ChatMessages>\r\n                </ChatMessageContainer>\r\n            </ChatsUserProfile> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatUserProfileComponent\r\n","import {\r\n    ContentChatBoxBody,\r\n    ChatBoxAddUserContainer,\r\n    ContentChatBoxChannelTitle,\r\n    AvatarnButton,\r\n    Button,\r\n    ChatsMessageandChatInput,\r\n    ChatsContainer,\r\n    ChatInput,\r\n    TextField,\r\n    SendIcon\r\n} from './components'\r\nimport ChatUserProfileComponent from './ChatUserProfileComponent'\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { emailRemover } from '../helpers/helpers';\r\nimport moment from 'moment';\r\nimport ScrollableFeed from 'react-scrollable-feed';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\nconst ContentChatBoxBodyComponent = (props) => {\r\n    const {\r\n        selectChannel,\r\n        selectUser,\r\n        handleOpen,\r\n        allMessages,\r\n        loginUser,\r\n        createAMessage,\r\n        classes,\r\n        chatMessage,\r\n        handleCloseDrawer,\r\n        matchesMD\r\n    } = props;\r\n    return (\r\n        <ContentChatBoxBody>\r\n                       <ChatBoxAddUserContainer>\r\n                            {!matchesMD && <ArrowBackIcon onClick={handleCloseDrawer}/>}\r\n                            <ContentChatBoxChannelTitle>{selectChannel ? selectChannel.name : selectUser.uid}</ContentChatBoxChannelTitle>\r\n                            <AvatarnButton>\r\n                                {/* <AvatarGroup max={5} variant=\"rounded\" className={classes.avatarSize} >\r\n                                    <AvatarSmallGroup alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" variant=\"rounded\" />\r\n                                </AvatarGroup> */}\r\n                            {selectChannel && <Button variant=\"contained\" onClick={handleOpen} >ADD USER</Button> }\r\n                            </AvatarnButton>\r\n                       </ChatBoxAddUserContainer>\r\n\r\n                       {(selectChannel || selectUser)  &&\r\n                       <ChatsMessageandChatInput>\r\n                                <ChatsContainer>\r\n                                    {/* <ScrollableFeed forceScroll='true'> */}\r\n                                        {allMessages.data?.data.map((data, index)=> {\r\n                                            return (\r\n                                            <ChatUserProfileComponent \r\n                                                key={index}\r\n                                                imgSrc={''} \r\n                                                initial={emailRemover(data.sender.uid).charAt(0).toUpperCase()}\r\n                                                chatUserName={emailRemover(data.sender.uid)}\r\n                                                chatUserTime={moment(data.created_at).fromNow()}\r\n                                                chatMessage={data.body}\r\n                                                loginUser={loginUser}\r\n                                                data={data}\r\n                                            />)\r\n                                        })}\r\n                                    {/* </ScrollableFeed> */}\r\n                                </ChatsContainer>\r\n\r\n                            <form onSubmit={(e) => \r\n                                {\r\n                                    e.preventDefault()\r\n                                    createAMessage()\r\n                                }\r\n                            }>\r\n                                <ChatInput>\r\n                                    <TextField \r\n                                        id=\"standard-basic\"\r\n                                        variant=\"standard\" \r\n                                        InputProps={{ \r\n                                            disableUnderline: true, \r\n                                            classes: {\r\n                                            input: classes.resize,\r\n                                            },\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                  <SendIcon onClick={createAMessage}/>\r\n                                                </InputAdornment>\r\n                                              ), }}\r\n                                        \r\n                                        placeholder={`Send a message to ${selectChannel ? selectChannel.name : emailRemover(selectUser.uid)}`}\r\n                                        inputRef={chatMessage}\r\n                                    />\r\n                                </ChatInput>\r\n                                \r\n                            </form>\r\n                            \r\n                       </ChatsMessageandChatInput>\r\n                        }\r\n                   </ContentChatBoxBody>\r\n    )\r\n}\r\n\r\nexport default ContentChatBoxBodyComponent\r\n","import {\r\n    ContentChatBoxSection,\r\n    ContentChatBoxHeader,\r\n    UserDetailsContainer,\r\n    UserID,\r\n    UserName,\r\n    ContentUserProfileContainer,\r\n    ContentChatBoxBody,\r\n    ChatBoxAddUserContainer,\r\n    ContentChatBoxChannelTitle,\r\n    AvatarnButton,\r\n    Button,\r\n    ChatsMessageandChatInput,\r\n    ChatsContainer,\r\n    ChatInput,\r\n    TextField,\r\n    SendIcon,\r\n    Avatar\r\n} from './components'\r\n\r\nimport {emailRemover} from '../helpers/helpers'\r\nimport ContentChatBoxBodyComponent from './ContentChatBoxBody';\r\n\r\nconst ContentChatBoxSectionComponent = (props) => {\r\n    const {\r\n        loginUser,\r\n        handleClickPopOver,\r\n        selectChannel,\r\n        selectUser,\r\n        allMessages,\r\n        handleOpen,\r\n        createAMessage,\r\n        classes,\r\n        chatMessage,\r\n        matchesMD\r\n    } = props;\r\n    return (\r\n        <ContentChatBoxSection>\r\n                   <ContentChatBoxHeader>\r\n                        {/* <ContentChannelSearchBox>\r\n                            <TextField \r\n                                id=\"standard-basic\"\r\n                                variant=\"standard\" \r\n                                InputProps={{ \r\n                                    disableUnderline: true}}\r\n                                placeholder=\"Search Avion School\"\r\n                            />\r\n                        </ContentChannelSearchBox> */}\r\n                        <UserDetailsContainer>\r\n                            <UserID>ID: {loginUser.data.data?.id}</UserID>\r\n                            <UserName>{emailRemover(loginUser.data.data?.uid)}</UserName>\r\n                        </UserDetailsContainer>\r\n                        <ContentUserProfileContainer onClick={handleClickPopOver}>\r\n                            <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\">\r\n                                {loginUser.data?.data ? emailRemover(loginUser.data.data?.email).charAt(0).toUpperCase() : null}\r\n                            </Avatar>\r\n                        </ContentUserProfileContainer>\r\n                   </ContentChatBoxHeader>\r\n\r\n                   \r\n                   <ContentChatBoxBodyComponent \r\n                        selectChannel={selectChannel}\r\n                        selectUser={selectUser}\r\n                        handleOpen={handleOpen}\r\n                        allMessages={allMessages}\r\n                        loginUser={loginUser}\r\n                        createAMessage={createAMessage}\r\n                        classes={classes}\r\n                        chatMessage={chatMessage}\r\n                        matchesMD={matchesMD}\r\n                   />\r\n               </ContentChatBoxSection>\r\n    )\r\n}\r\n\r\nexport default ContentChatBoxSectionComponent\r\n","import {\r\n    ContentChannelSection,\r\n    ContentChannelTitle,\r\n    ChannelsAndMessagesContainer,\r\n    ChannelsTitleHeader,\r\n    AddIcon,\r\n    ChannelsContainer,\r\n    Channel,\r\n    LogoContainer,\r\n    Logo,\r\n    ContentUserProfileContainer,\r\n    Avatar\r\n} from './components'\r\nimport UserChatBoxComponent from './UserChatBoxComponent';\r\nimport channel_logo from '../../assets/sampleLogo.png'\r\nimport { emailRemover } from '../helpers/helpers';\r\nimport React from 'react';\r\n\r\n\r\nconst ContentChannelSectionComponent = (props) => {\r\n    const {\r\n        handleOpenAddChannel,\r\n        channels,\r\n        selectChannel,\r\n        intervalRetrieveMessagesinChannel,\r\n        handleOpenDM,\r\n        matchesMD,\r\n        handleClickPopOver,\r\n        loginUser\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <ContentChannelSection>\r\n            {!matchesMD &&\r\n                <LogoContainer>\r\n                    <Logo src={channel_logo} />\r\n                </LogoContainer>\r\n            }\r\n            <ContentChannelTitle>Avion School</ContentChannelTitle>\r\n\r\n            {!matchesMD && \r\n            <ContentUserProfileContainer onClick={handleClickPopOver}>\r\n                <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\">\r\n                    {loginUser.data?.data ? emailRemover(loginUser.data.data?.email).charAt(0).toUpperCase() : null}\r\n                </Avatar>\r\n            </ContentUserProfileContainer>\r\n            }\r\n            {matchesMD &&\r\n                <ChannelsAndMessagesContainer>\r\n                    <ChannelsTitleHeader>Channels <AddIcon onClick={handleOpenAddChannel}/></ChannelsTitleHeader>\r\n                    <ChannelsContainer>\r\n                        {channels &&\r\n                            channels.map((data) => {\r\n                                return (<Channel key={data.id} active={selectChannel.id === data.id} \r\n                                    onClick={() => {\r\n                                        return (\r\n                                            intervalRetrieveMessagesinChannel(data)\r\n                                        ) \r\n                                    }}>{data.name}</Channel>)\r\n                                })\r\n                        }\r\n                    </ChannelsContainer>\r\n                    <ChannelsTitleHeader>Direct Messages <AddIcon onClick={handleOpenDM}/></ChannelsTitleHeader>\r\n                    {/* <ChannelsContainer>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                    </ChannelsContainer> */}\r\n                </ChannelsAndMessagesContainer>\r\n            }\r\n        </ContentChannelSection>\r\n    )\r\n}\r\n\r\nexport default ContentChannelSectionComponent\r\n","import {\r\n    style,\r\n    useStyles,\r\n    Container, \r\n    LogoContainer, \r\n    Logo,\r\n    ContentContainer,\r\n    Typography,\r\n    ChannelsAndMessagesContainer,\r\n    ChannelsTitleHeader,\r\n    AddIcon,\r\n    Channel,\r\n    ChannelsContainer\r\n} from './components'\r\nimport './App.css'\r\nimport channel_logo from '../../assets/sampleLogo.png'\r\nimport Popover from '@mui/material/Popover';\r\nimport useHooks from './hooks'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport AddChannelModalComponent from './NewChannelComponent'\r\nimport {emailRemover} from '../helpers/helpers'\r\nimport AddUserModalComponent from './AddUserComponent'\r\nimport SnackbarComponent from '../Snackbars/index'\r\nimport AddDMModalComponent from './AddDMModalComponent'\r\nimport ContentChatBoxSectionComponent from './ContentChatBoxSectionComponent';\r\nimport ContentChannelSectionComponent from './ContentChannelSectionComponent';\r\n\r\n\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport ContentChatBoxBodyComponent from './ContentChatBoxBody';\r\nimport {useState} from 'react';\r\n\r\n\r\nconst Index = () => {\r\n    const classes = useStyles();\r\n    const {\r\n        loginUser, \r\n        addUserEmail,\r\n        userID,\r\n        searchUserDM,\r\n        searchResultsDM,\r\n        allMessages,\r\n        isLoading,\r\n        handleOpen,\r\n        handleAddUser,\r\n        handleCloseAddUserModal,\r\n        openAddChannel,\r\n        handleClickPopOver,\r\n        handleClosePopOver,\r\n        openPopOver,\r\n        idPopOver,\r\n        handleOpenAddChannel,\r\n        intervalRetrieveMessagesinChannel,\r\n        intervalRetrieveMessagesinUser,\r\n        createAMessage,\r\n        handleLogout,\r\n        openDM,\r\n        handleOpenDM,\r\n        filteredItems,\r\n        debounceOnChange,\r\n        channels,\r\n        selectChannel,\r\n        selectUser,\r\n        users,\r\n        chatMessage,\r\n        open,\r\n        handleClose,\r\n        query,\r\n        anchorEl,\r\n        state,\r\n        createAChannel,\r\n        channelName,\r\n        matchesMD,\r\n        channel\r\n    } = useHooks();\r\n\r\n    const [states, setStates] = useState({\r\n        right: false,\r\n      });\r\n    \r\n      const toggleDrawer = () => {\r\n        setStates({right: true})\r\n      };\r\n\r\n      const handleCloseDrawer = () => {\r\n          setStates({right: false})\r\n      }\r\n\r\n    console.log({channel})\r\n\r\n    return (\r\n        <> \r\n        <Container>\r\n            {matchesMD &&\r\n           <LogoContainer>\r\n                <Logo src={channel_logo} />\r\n           </LogoContainer>}\r\n           <ContentContainer>\r\n               <ContentChannelSectionComponent \r\n                    handleOpenAddChannel={handleOpenAddChannel}\r\n                    handleOpenDM={handleOpenDM}\r\n                    channels={channels}\r\n                    selectChannel={selectChannel}\r\n                    intervalRetrieveMessagesinChannel={intervalRetrieveMessagesinChannel}\r\n                    matchesMD={matchesMD}\r\n                    handleClickPopOver={handleClickPopOver}\r\n                    loginUser={loginUser}\r\n               />\r\n\r\n            {!matchesMD &&\r\n                <ChannelsAndMessagesContainer>\r\n                    <ChannelsTitleHeader>Channels <AddIcon onClick={handleOpenAddChannel}/></ChannelsTitleHeader>\r\n                    <ChannelsContainer>\r\n                        {channels &&\r\n                            channels.map((data) => {\r\n                                return (<Channel key={data.id} active={selectChannel.id === data.id} \r\n                                    onClick={() => {\r\n                                        return (\r\n                                            intervalRetrieveMessagesinChannel(data),\r\n                                            toggleDrawer()\r\n                                        )\r\n                                    }}>{data.name}</Channel>)\r\n                                })\r\n                        }\r\n                    </ChannelsContainer>\r\n                    <ChannelsTitleHeader>Direct Messages <AddIcon onClick={handleOpenDM}/></ChannelsTitleHeader>\r\n                    {/* <ChannelsContainer>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                    </ChannelsContainer> */}\r\n                </ChannelsAndMessagesContainer>\r\n            }\r\n\r\n            {matchesMD &&\r\n               <ContentChatBoxSectionComponent \r\n                    loginUser={loginUser}\r\n                    handleClickPopOver={handleClickPopOver}\r\n                    selectChannel={selectChannel}\r\n                    selectUser={selectUser}\r\n                    allMessages={allMessages}\r\n                    handleOpen={handleOpen}\r\n                    createAMessage={createAMessage}\r\n                    classes={classes}\r\n                    chatMessage={chatMessage}\r\n                    matchesMD={matchesMD}\r\n                    channel={channel}\r\n               /> \r\n            }\r\n           </ContentContainer>\r\n\r\n            {/* Modal for Add User  */}\r\n            {users.data?.data  &&\r\n            <AddUserModalComponent\r\n                open={open}\r\n                handleClose={handleClose}\r\n                style={style}\r\n                classes={classes}\r\n                userID={userID}\r\n                emailRemover={emailRemover}\r\n                handleAddUser={handleAddUser}\r\n                selectChannel={selectChannel}\r\n                loginUser={loginUser}\r\n                debounceOnChange={debounceOnChange}\r\n                filteredItems={filteredItems}\r\n                query={query}\r\n                matchesMD={matchesMD}\r\n            />\r\n            }\r\n            {isLoading  &&\r\n                <Backdrop\r\n                    sx={{ color: '#fff' ,zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                    open={true}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            }\r\n\r\n            {users.data?.data  &&\r\n                <AddDMModalComponent\r\n                    open={openDM}\r\n                    handleClose={handleClose}\r\n                    style={style}\r\n                    classes={classes}\r\n                    addUserEmail={addUserEmail}\r\n                    searchUser={searchUserDM}\r\n                    // getSearchUser={getSearchUserDM}\r\n                    users={searchUserDM.length < 1 ? users.data?.data : searchResultsDM}\r\n                    emailRemover={emailRemover}\r\n                    selectChannel={selectChannel}\r\n                    loginUser={loginUser}\r\n                    intervalRetrieveMessagesinUser={intervalRetrieveMessagesinUser}\r\n                    debounceOnChange={debounceOnChange}\r\n                    filteredItems={filteredItems}\r\n                    matchesMD={matchesMD}\r\n                    toggleDrawer={toggleDrawer}\r\n                />\r\n            } \r\n            \r\n            {/* For Logout */}\r\n            <div>\r\n                <Popover\r\n                    id={idPopOver}\r\n                    open={openPopOver}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClosePopOver}\r\n                    anchorOrigin={{\r\n                        vertical: 'center',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    <Typography sx={{ p: 2 }} >ID No: {loginUser.data.data?.id}</Typography>\r\n                    <Typography sx={{ p: 2 }} >User ID: {emailRemover(loginUser.data.data?.uid)}</Typography>\r\n                    <Typography sx={{ p: 2 }} style={{cursor: 'pointer'}} onClick={() => handleLogout()}>Logout</Typography>\r\n                </Popover>\r\n            </div>\r\n\r\n            {/* Modal for Add Channel */}\r\n            {users.data?.data && \r\n                <AddChannelModalComponent\r\n                    openAddChannel={openAddChannel}\r\n                    handleCloseChannel={handleClose}\r\n                    classes={classes}\r\n                    createAChannel={createAChannel}\r\n                    channelName={channelName}\r\n                    // inputUsers={inputUsers}\r\n                    usersList={users}\r\n                    loginUser={loginUser}\r\n                    intervalRetrieveMessagesinUser={intervalRetrieveMessagesinUser}\r\n                    debounceOnChange={debounceOnChange}\r\n                    filteredItems={filteredItems}\r\n                    matchesMD={matchesMD}\r\n                />\r\n            }\r\n\r\n            {/* Snackbar */}\r\n            <SnackbarComponent \r\n                isOpen={state.open} \r\n                close={handleCloseAddUserModal}\r\n                message={state.message}\r\n                status={state.warning ? `warning` : `success`}\r\n            />\r\n\r\n            {!matchesMD &&\r\n                    <SwipeableDrawer\r\n                        anchor='right'\r\n                        open={states.right}\r\n                        style={{ width: '100%'}}\r\n                    >\r\n                        <ContentChatBoxBodyComponent \r\n                            selectChannel={selectChannel}\r\n                            selectUser={selectUser}\r\n                            handleOpen={handleOpen}\r\n                            allMessages={allMessages}\r\n                            loginUser={loginUser}\r\n                            createAMessage={createAMessage}\r\n                            classes={classes}\r\n                            chatMessage={chatMessage}\r\n                            handleCloseDrawer={handleCloseDrawer}\r\n                        />\r\n                    </SwipeableDrawer>\r\n            }\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index;\r\n","import styled, { keyframes } from 'styled-components'\r\nimport MaterialContainer from '@mui/material/Container'\r\nimport MaterialButton from '@mui/material/Button'\r\nimport MaterialLink from '@mui/material/Link'\r\nimport MaterialTextField from '@mui/material/TextField';\r\nimport MaterialTypography from '@mui/material/Typography';\r\nimport MaterialBox from '@mui/material/Box';\r\nimport { fadeIn } from 'react-animations';\r\n\r\n\r\nconst fadeInAnimation = keyframes`${fadeIn}`;\r\n\r\nexport const Container = styled(MaterialContainer) `\r\n    display: flex !important;\r\n    align-items: center !important;\r\n    height: 100vh !important;\r\n    font-family: 'Source Sans Pro', sans-serif !important;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    animation: 1s ${fadeInAnimation};\r\n`\r\nexport const Button = styled(MaterialButton) `\r\n    background: #34495e !important;\r\n    &:hover {\r\n        opacity: 0.9 !important;\r\n        background: #34495e !important;\r\n    }\r\n`\r\nexport const Link = styled(MaterialLink) `\r\n    color: #34495e !important;\r\n`\r\nexport const Box = styled(MaterialBox) `\r\n\r\n`\r\nexport const TextField = styled(MaterialTextField) ``\r\nexport const Typography = styled(MaterialTypography) ``\r\nexport const LogoTitle = styled.span ``\r\nexport const LogoImg = styled.img `\r\n    width: 30%; \r\n    height: 30%;\r\n`","import {useContext, useState, useRef} from 'react'\r\nimport {AppContext} from '../Global/AppContext'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { creatingUserSessionAPI } from '../api/api'\r\n\r\n\r\nconst useHooks = () => {\r\n    const {isLogin, setIsLogin, loginUser, setLoginUser} = useContext(AppContext)\r\n    const email = useRef('')\r\n    const password = useRef('')\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        isLoading: false,\r\n        response: '',\r\n        responseMessage: '',\r\n        warning: false,\r\n    })\r\n    const history = useHistory();\r\n\r\n    // Creating a User Session\r\n    const handleLogin = async() => {\r\n        setState({isLoading: true})\r\n        creatingUserSessionAPI(email, password, state, setState, setLoginUser, setIsLogin, history)\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        };\r\n        setState({\r\n          ...state, open: false,\r\n        })\r\n    };\r\n  \r\n    return {\r\n        isLogin,\r\n        setIsLogin,\r\n        loginUser, \r\n        setLoginUser,\r\n        handleClose,\r\n        email,\r\n        password,\r\n        history,\r\n        state,\r\n        handleLogin\r\n    }\r\n}\r\n\r\nexport default useHooks","import { Link as RouterLink } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Container, \r\n  Button, \r\n  Link, \r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  LogoTitle,\r\n  LogoImg\r\n} from './components'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Snackbar from '../Snackbars'\r\nimport useHooks from './hooks'\r\nimport channel_logo from '../../assets/sampleLogo.png'\r\n\r\n\r\nconst Index = (props) => {\r\n  const {\r\n    handleClose,\r\n    email,\r\n    password,\r\n    state,\r\n    handleLogin} = useHooks();\r\n  \r\n    return (\r\n        <>\r\n         <Box\r\n            sx={{\r\n            backgroundColor: 'background.default',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            justifyContent: 'center'\r\n            }}\r\n         >\r\n            <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n              password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            // onSubmit={() => {\r\n            //   navigate('/app/dashboard', { replace: true });\r\n            // }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3, textAlign: 'center', }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                    style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}\r\n                  >\r\n                    <LogoImg src={channel_logo} />\r\n                    <LogoTitle>Avion School</LogoTitle>\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    pb: 1,\r\n                    pt: 3\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    Login your email address\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                  inputRef={email}\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                  inputRef={password}\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={!state.warning && isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    onClick={() => handleLogin()}\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link component={RouterLink} to=\"/messaging_app/register\" variant=\"h6\" underline=\"hover\">\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n        {state.isLoading && \r\n          <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={true}\r\n            // onClick={handleClose}\r\n          >\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n          }\r\n          <Snackbar \r\n            isOpen={state.open} \r\n            close={handleClose}\r\n            message={state.responseMessage}\r\n            status={state.warning ? 'warning': 'success'}\r\n          />\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import styled, { keyframes } from 'styled-components'\r\nimport MaterialContainer from '@mui/material/Container'\r\nimport MaterialButton from '@mui/material/Button'\r\nimport MaterialLink from '@mui/material/Link'\r\nimport MaterialBox from '@mui/material/Box';\r\nimport MaterialCheckbox from '@mui/material/Checkbox';\r\nimport MaterialFormHelperText from '@mui/material/FormHelperText';\r\nimport MaterialTextField from '@mui/material/TextField';\r\nimport MaterialTypography from '@mui/material/Typography';\r\nimport { fadeIn } from 'react-animations';\r\n\r\n\r\nconst fadeInAnimation = keyframes`${fadeIn}`;\r\n    \r\n\r\n\r\nexport const Container = styled(MaterialContainer) `\r\n    display: flex !important;\r\n    align-items: center !important;\r\n    height: 100vh !important;\r\n    font-family: 'Source Sans Pro', sans-serif !important;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    animation: 1s ${fadeInAnimation};\r\n`\r\nexport const Button = styled(MaterialButton) `\r\n    background: #34495e !important;\r\n    &:hover {\r\n        opacity: 0.9 !important;\r\n        background: #34495e !important;\r\n    }\r\n`\r\nexport const Link = styled(MaterialLink) `\r\n    color: #34495e !important;\r\n`\r\nexport const Box = styled(MaterialBox) ``\r\nexport const Checkbox = styled(MaterialCheckbox) ``\r\nexport const FormHelperText = styled(MaterialFormHelperText) ``\r\nexport const TextField = styled(MaterialTextField) ``\r\nexport const Typography = styled(MaterialTypography) ``","import {useRef, useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useHooks = () => {\r\n\r\n    const email = useRef('')\r\n    const password = useRef('')\r\n    const retypePassword = useRef('')\r\n\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        loading: false,\r\n        response: '',\r\n        responseMessage: '',\r\n        warning: false,\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        };\r\n        setState({\r\n            ...state, open: false,\r\n        })\r\n    };\r\n    return {\r\n        email,\r\n        password,\r\n        retypePassword,\r\n        history,\r\n        handleClose,\r\n        state,\r\n        setState\r\n    }\r\n}\r\n\r\nexport default useHooks\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { Link as RouterLink, useHistory} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Container, \r\n  Button, \r\n  Link, \r\n  Box,\r\n  // Checkbox,\r\n  // FormHelperText,\r\n  TextField,\r\n  Typography} from './components'\r\nimport axios from 'axios'\r\nimport Snackbar from '../Snackbars'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport useHooks from './hooks'\r\nimport { userRegistrationAPI } from '../api/api';\r\n\r\n\r\nconst Register = (props) => {\r\n  const {email,\r\n    password,\r\n    retypePassword,\r\n    history,\r\n    handleClose,\r\n    state,\r\n    setState} = useHooks();\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              retypepassword: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n            Yup.object().shape({\r\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n              password: Yup.string().max(255).required('Password is required'),\r\n              retypepassword: Yup.string().max(255).required('Retype password is required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n              // policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n            })\r\n          }\r\n\r\n          // User Registration\r\n            onSubmit={async() => {\r\n              setState({...state, loading: true})\r\n              userRegistrationAPI(email, password, retypePassword, state, setState, history)\r\n            }}\r\n          >\r\n            \r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              \r\n              <form onSubmit={handleSubmit} method=\"POST\">\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                  inputRef={email}\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                  inputRef={password}\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.retypepassword && errors.retypepassword)}\r\n                  fullWidth\r\n                  helperText={touched.retypepassword && errors.retypepassword}\r\n                  label=\"Retype Password\"\r\n                  margin=\"normal\"\r\n                  name=\"retypepassword\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.retypepassword}\r\n                  variant=\"outlined\"\r\n                  inputRef={retypePassword}\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    {state.loading && \r\n                    <Backdrop\r\n                      sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                      open={true}\r\n                      onClick={handleClose}\r\n                    >\r\n                      <CircularProgress color=\"inherit\" />\r\n                    </Backdrop>\r\n                    }\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link component={RouterLink} to=\"/messaging_app/login\" variant=\"h6\" underline=\"hover\">\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n          <Snackbar \r\n            isOpen={state.open} \r\n            close={handleClose}\r\n            message={state.responseMessage}\r\n            status={state.warning ? 'warning' : 'success'}\r\n          />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;","\r\nimport Home from '../../bak_pages/Home'\r\nimport DMs from '../../bak_pages/DMs'\r\nimport Mentions from '../../bak_pages/Mentions'\r\nimport You from '../../bak_pages/You'\r\n\r\n\r\nimport { Redirect } from 'react-router-dom'\r\nimport MainPage from '../Main'\r\nimport Login from '../Login'\r\nimport Register from \"../Register\";\r\nimport ContentChatBoxBodyComponent from '../Main/ContentChatBoxBody'\r\n\r\nconst Index = (props) => {\r\n  const {Switch, Route, isLogin, loginUser} = props;\r\n  return (\r\n    <>\r\n      <Switch>\r\n          <Route exact path=\"/messaging_app/app/:id\" component={() => isLogin ? <MainPage/> : <Redirect to='/login'/>} />\r\n          <Route exact path=\"/messaging_app/login\" component={() => isLogin ? <Redirect to={`/app/${loginUser.data?.data?.id}`}/> : <Login />} />\r\n          <Route exact path=\"/messaging_app\" component={() => isLogin ? <Redirect to={`/app/${loginUser.data?.data?.id}`}/> : <Login />} />\r\n          <Route exact path=\"/messaging_app/register\" component={() => isLogin ? <Redirect to={`/app/${loginUser.data?.data?.id}`}/> : <Register />} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","import {useContext, useEffect} from 'react'\r\nimport {AppContext} from '../Global/AppContext'\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nconst useHooks = () => {\r\n    const {isLogin, setIsLogin, loginUser, setLoginUser} = useContext(AppContext)\r\n\r\n    const readCookie = () => {\r\n        const user = Cookies.get(\"user\")\r\n        if(user) {\r\n            setIsLogin(true)\r\n        } else {\r\n            setIsLogin(false)\r\n        }\r\n    } \r\n\r\n    useEffect(() => {\r\n        readCookie();\r\n    }, [])\r\n    \r\n    return {\r\n        isLogin,\r\n        setIsLogin,\r\n        loginUser,\r\n        setLoginUser\r\n    }\r\n}\r\n\r\nexport default useHooks","// import {\r\n//     Link\r\n// } from './components.js';\r\n\r\n// import HeaderComponent from './Header.js';\r\n// import FooterComponent from './Footer.js';\r\n\r\nimport React, {useEffect} from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\nimport SwitchComponent from '../Routes';\r\nimport useHooks from './hooks';\r\n\r\n\r\n\r\nconst Index = () => {\r\n    const { isLogin,\r\n        loginUser } = useHooks();\r\n    \r\n    \r\n    return (\r\n        <>\r\n            {/* <Router>\r\n                <HeaderComponent useLocation={useLocation}/>\r\n                <SwitchComponent Switch={Switch} Route={Route} useLocation={useLocation}/>\r\n                <FooterComponent Link={Link} useLocation={useLocation}/>\r\n                <Redirect to={`/`} />\r\n            </Router> */}\r\n            <Router>\r\n                <SwitchComponent \r\n                    Switch={Switch} \r\n                    Route={Route} \r\n                    isLogin={isLogin}\r\n                    loginUser={loginUser}\r\n                />\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import Components from './components/Layout'\nimport AppProvider from './components/Global/AppContext'\n\n\nfunction App() {\n  return (\n    <>\n      <AppProvider>\n        <Components/>\n      </AppProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
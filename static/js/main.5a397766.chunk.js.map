{"version":3,"sources":["bak_pages/Home/components.js","bak_pages/DMs/components.js","bak_pages/JumpToComponent/components.js","bak_pages/DMs/index.js","bak_pages/You/components.js","bak_pages/You/index.js","components/Main/components.js","assets/sampleLogo.png","components/helpers/useSessionStorage.js","components/helpers/useLocalStorage.js","components/Main/hooks.js","components/Global/AppContext.js","components/api/api.js","components/helpers/helpers.js","components/Main/NewChannelComponent.js","components/Main/AddUserComponent.js","components/Snackbars/index.js","components/Main/AddDMModalComponent.js","components/Main/ChatUserProfileComponent.js","assets/Group-Chat-pana.png","components/Main/ContentChatBoxBody.js","components/Main/ContentChatBoxSectionComponent.js","components/Main/ContentChannelSectionComponent.js","components/Main/index.js","components/Login/components.js","components/Login/hooks.js","components/Login/index.js","components/Register/components.js","components/Register/hooks.js","components/Register/index.js","components/Routes/index.js","components/Layout/hooks.js","components/Layout/index.js","App.js","reportWebVitals.js","index.js"],"names":["IconsNLabels","styled","div","Labels","MaterialLockOutlinedIcon","span","MaterialCommentOutlinedIcon","MaterialAddBoxIcon","MaterialFavoriteIcon","BsPencilSquare","ChatBody","MaterialTextField","Box","Badge","theme","right","top","border","padding","background","MaterialNotificationsOffOutlinedIcon","MaterialEventBusyIcon","fadeInAnimation","keyframes","fadeIn","useStyles","makeStyles","avatarSize","width","height","fontSize","fontFamily","color","paper","style","position","left","transform","bgcolor","boxShadow","p","Container","LogoContainer","Logo","img","ContentContainer","ContentChannelSection","ContentChannelTitle","TextField","ContentUserProfileContainer","Avatar","MaterialAvatar","ChannelsAndMessagesContainer","ChannelsTitleHeader","AddIcon","MaterialAddIcon","ChannelsContainer","Channel","props","active","ContentChatBoxSection","MaterialLockIcon","ContentChatBoxHeader","ContentChatBoxBody","ContentChatBoxChannelTitle","ChatBoxAddUserContainer","Button","MaterialButton","AvatarGroup","MaterialAvatarGroup","AvatarSmallGroup","AvatarnButton","ChatInput","ChatsContainer","ChatUsernTime","ChatUserName","ChatUserTime","ChatsUserProfile","ChatMessageContainer","ChatMessages","ChatsMessageandChatInput","UidInputContainer","UsersContainer","User","AddUserUsersContainer","ButtonAddUser","SendIcon","MaterialSendIcon","Typography","MaterialTypography","UserName","UserDetailsContainer","UserID","InviteUsersTitle","ButtonAddChannel","MaterialBox","BoxDM","CloseIcon","MaterialCloseIcon","ModalTitle","EmptyChatBoxContainer","Image","EmptyChatTitle","useSessionStorage","key","initialValue","useState","item","window","sessionStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","int1","int2","int3","int4","localStorage","AppContext","React","createContext","AppProvider","isLogin","setIsLogin","state","loginUser","func","setLoginUser","Provider","children","url","creatingUserSessionAPI","email","password","setState","history","a","axios","data","current","headers","method","then","res","status","Cookies","set","expires","open","response","setTimeout","isLoading","push","id","catch","err","errors","responseMessage","length","warning","userRegistrationAPI","retypePassword","loading","full_messages","retrieveAllUsersAPI","setIsLoading","setUsers","client","expiry","uid","retrieveAllChannelsAPI","setChannels","retrieveAChannelAPI","setChannel","users","channel_members","map","channel","filter","user","user_id","inviteUserToChannelAPI","selectChannel","setOpen","message","createAChannelAPI","channelName","setOpenAddChannel","retrieveAllMessagesinaChannelAPI","setAllMessages","retrieveAllMessageswithaUserAPI","createAMessageAPI","selectUser","chatMessage","setSelectChannel","retrieveMessagesinChannel","setSelectUser","retrieveMessagesinUser","useHooks","useContext","addUserEmail","useRef","userID","channels","searchUserDM","searchResultsDM","allMessages","duplicateForChannel","setDuplicateForChannel","duplicateForUser","setDuplicateForUser","query","setQuery","openDM","setOpenDM","anchorEl","setAnchorEl","openAddChannel","matchesMD","useMediaQuery","handleOpen","handleAddUser","handleClose","openPopOver","Boolean","idPopOver","undefined","handleOpenAddChannel","all","createAMessage","createAChannel","useEffect","filteredItems","toLowerCase","includes","getFilteredItems","debounceOnChange","debounce","e","target","handleCloseAddUserModal","event","reason","handleClickPopOver","currentTarget","handleClosePopOver","intervalRetrieveMessagesinChannel","clearTimeout","setInterval","intervalRetrieveMessagesinUser","handleLogout","remove","handleOpenDM","emailRemover","split","Index","handleCloseChannel","inputUsers","classes","usersToAdd","setUsersToAdd","openPreAddedUsersmodal","setOpenPreAddedUsersmodal","Modal","keepMounted","onClose","sx","variant","component","onClick","mt","placeholder","InputProps","disableUnderline","input","resize","inputRef","onChange","max","className","cursor","alt","toUpperCase","src","index","addUsersToChannel","charAt","substring","textAlign","startIcon","maxHeight","overflowY","minHeight","splice","deleteAddedUser","AddUserComponent","searchUser","getSearchUser","handleDebounceAddUser","type","Alert","forwardRef","ref","elevation","isOpen","close","Snackbar","autoHideDuration","anchorOrigin","vertical","horizontal","severity","debounceDMSearch","toggleDrawer","ChatUserProfileComponent","imgSrc","initial","chatUserName","chatUserTime","sender","marginLeft","ContentChatBoxBodyComponent","handleCloseDrawer","name","moment","created_at","fromNow","body","onSubmit","preventDefault","endAdornment","InputAdornment","EmptyChatPic","ContentChatBoxSectionComponent","ContentChannelSectionComponent","channel_logo","states","setStates","Backdrop","zIndex","drawer","CircularProgress","AddDMModalComponent","Popover","transformOrigin","usersList","SwipeableDrawer","anchor","MaterialContainer","Link","MaterialLink","LogoTitle","LogoImg","useHistory","handleLogin","backgroundColor","display","flexDirection","justifyContent","maxWidth","initialValues","validationSchema","Yup","shape","required","handleBlur","handleChange","handleSubmit","isSubmitting","touched","values","mb","alignItems","pb","pt","align","fullWidth","helperText","label","margin","onBlur","py","disabled","size","RouterLink","to","underline","MaterialCheckbox","MaterialFormHelperText","Register","firstName","lastName","retypepassword","policy","oneOf","gutterBottom","Switch","Route","exact","path","Main","Login","get","readCookie","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a397766.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nimport MaterialLockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport MaterialCommentOutlinedIcon from '@mui/icons-material/CommentOutlined';\r\nimport MaterialAddBoxIcon from '@mui/icons-material/AddBox';\r\nimport MaterialFavoriteIcon from '@mui/icons-material/Favorite';\r\nimport {BsPencilSquare} from 'react-icons/bs'\r\n\r\n\r\nexport const Container = styled.div `\r\n    /* height: 100vh; */\r\n`\r\n\r\nexport const Body = styled.div `\r\n    padding: 0.75rem 0.9375rem;\r\n    padding-top: 0.625rem;\r\n`\r\n\r\n\r\n\r\n\r\nexport const IconsNLabels = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1.25rem;\r\n    margin: 1.25rem 0 1.6875rem; \r\n`\r\n\r\nexport const IconsNLabelsItems = styled(IconsNLabels) `\r\n    margin: 1.25rem 0; \r\n`\r\n\r\nexport const LockOutlinedIcon = styled(MaterialLockOutlinedIcon) `\r\n    color: #474747; \r\n`\r\nexport const Labels = styled.span `\r\n    color: #606060;\r\n`\r\n\r\nexport const CommentOutlinedIcon = styled(MaterialCommentOutlinedIcon) `\r\n    color: #474747; \r\n`\r\n\r\nexport const SectionTitle = styled.span `\r\n    color: #606060;\r\n`\r\n\r\nexport const AddBoxIcon = styled(MaterialAddBoxIcon) `\r\n    color: #474747;\r\n`\r\n\r\nexport const FavoriteIcon = styled(MaterialFavoriteIcon) `\r\n    color: #008360;\r\n    width: 0.625rem !important;\r\n    height: 0.625rem !important;\r\n`\r\n\r\nexport const Footer = styled.div `\r\n    padding: 0.75rem 0.9375rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    border-top: 1px solid #e6e6e6;\r\n    position: fixed;\r\n    z-index: 999;\r\n    bottom: 0;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    right: 0;\r\n    left: 0;\r\n`\r\n\r\nexport const FooterIconsNLabelsItem = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\n\r\nexport const FooterLabels = styled(Labels) ``\r\nexport const FooterIcons = styled.div `\r\n    display: flex;\r\n    justify-content: space-between;\r\n`\r\nexport const PencilSquare = styled(BsPencilSquare)`\r\n    font-size: 1.3rem;\r\n`","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div `\r\n    padding: 0.75rem 0.9375rem;\r\n    padding-top: 0.625rem;\r\n`\r\nexport const ChatRow = styled.div `\r\n    display: flex;\r\n    gap: 1.125rem;\r\n    margin: 1.25rem 0;\r\n`\r\nexport const UserChatBoxContainer = styled.div `\r\n   \r\n`\r\n\r\nexport const UserName = styled.span `\r\n    fonst-size: 1.125rem;\r\n`\r\n\r\nexport const ChatBody = styled.div `\r\n    color: #606060;\r\n`\r\n\r\n\r\nexport const ChatDate = styled(ChatBody) `\r\n    color: #606060;\r\n`\r\n\r\n","import styled from 'styled-components'\r\nimport MaterialTextField from '@mui/material/TextField';\r\n\r\nexport const TextField = styled(MaterialTextField) `\r\n    width: 100%;\r\n    border-radius: 10px;\r\n`","import {Container, ChatRow, UserChatBoxContainer, UserName, ChatBody, ChatDate} from './components.js'\r\nimport JumpToComponent from '../JumpToComponent'\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport { styled } from '@mui/material/styles';\r\n\r\nconst shapeStyles = { bgcolor: 'primary.main', width: 40, height: 40, borderRadius: '5px' };\r\nconst rectangle = <Box component=\"span\" sx={shapeStyles} />;\r\n\r\n\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        right: `3px`,\r\n        top: `13px`,\r\n        border: `3px solid #fff`,\r\n        padding: `0 4px`,\r\n        background: `green`\r\n    },\r\n  }));\r\n\r\nconst Index = (props) => {\r\n    const {useLocation} = props;\r\n    const location = useLocation();\r\n    return (\r\n        <Container>\r\n            {(location.pathname === '/' || location.pathname === '/dm') && <JumpToComponent />}\r\n            <ChatRow>\r\n                <StyledBadge color=\"secondary\" badgeContent=\" \" anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}>\r\n                    {rectangle}\r\n                </StyledBadge>\r\n                <UserChatBoxContainer>\r\n                    <UserName>Slackbot</UserName>\r\n                    <ChatBody>{`slackbot: Hello I'm slackbot Hello I'm slackbot Hello I'm slackbot Hello I'm slackbot`.substring(0,65)+  `... `}</ChatBody>\r\n                </UserChatBoxContainer>\r\n                <ChatDate>3h</ChatDate>\r\n            </ChatRow>\r\n            <ChatRow>\r\n                <StyledBadge color=\"secondary\" badgeContent=\" \" anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}>\r\n                    {rectangle}\r\n                </StyledBadge>\r\n                <UserChatBoxContainer>\r\n                    <UserName>Slackbot</UserName>\r\n                    <ChatBody>{`slackbot: Hello I'm slackbot Hello I'm slackbot Hello I'm slackbot Hello I'm slackbot`.substring(0,65)+  `... `}</ChatBody>\r\n                </UserChatBoxContainer>\r\n                <ChatDate>3h</ChatDate>\r\n            </ChatRow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import styled from 'styled-components'\r\nimport MaterialTextField from '@mui/material/TextField';\r\nimport MaterialNotificationsOffOutlinedIcon from '@mui/icons-material/NotificationsOffOutlined';\r\nimport MaterialEventBusyIcon from '@mui/icons-material/EventBusy';\r\n\r\nexport const Container = styled.div `\r\n    padding: 0.75rem 0.9375rem;\r\n    padding-top: 0.625rem;\r\n`\r\nexport const ProfileDetailsContainer = styled.div `\r\n    display: flex;\r\n    gap: 1.25rem;\r\n`\r\nexport const ProfileName = styled.span `\r\n    font-size: 1.25rem;\r\n    font-weight: bold;\r\n`\r\nexport const ActiveState = styled.span `\r\n    color: #606060;\r\n`\r\nexport const ProfileDetails = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`\r\nexport const TextField = styled(MaterialTextField) `\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    margin-top: 1.5rem !important;\r\n`\r\nexport const IconsNLabels = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 1.25rem;\r\n    margin: 1.375rem 0 !important; \r\n`\r\nexport const Labels = styled.span `\r\n    color: #606060;\r\n`\r\nexport const NotificationsOffOutlinedIcon = styled(MaterialNotificationsOffOutlinedIcon) `\r\n    color: #606060;\r\n`\r\nexport const EventBusyIcon = styled(MaterialEventBusyIcon) `\r\ncolor: #606060;\r\n`","import {\r\n  Container, \r\n  ProfileDetailsContainer, \r\n  ProfileName, \r\n  ActiveState, \r\n  ProfileDetails, \r\n  NotificationsOffOutlinedIcon,\r\n  EventBusyIcon\r\n} from './components'\r\nimport Box from '@mui/material/Box';\r\nimport Badge from '@mui/material/Badge';\r\nimport { styled } from '@mui/material/styles';\r\nimport {TextField} from './components'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport BodyIconsComponent from './BodyIconsComponent';\r\n\r\nconst shapeStyles = { bgcolor: 'primary.main', width: 56, height: 56, borderRadius: '5px' };\r\nconst rectangle = <Box component=\"span\" sx={shapeStyles} />;\r\nconst StyledBadge = styled(Badge)(({ theme }) => ({\r\n    '& .MuiBadge-badge': {\r\n        right: `3px`,\r\n        top: `30px`,\r\n        border: `3px solid #fff`,\r\n        padding: `0 4px`,\r\n        background: `green`\r\n    },\r\n  }));\r\n\r\n\r\nconst Index = () => {\r\n\r\n    const CustomTextField = withStyles({\r\n        root: {\r\n          '& .MuiOutlinedInput-root': {\r\n            '& fieldset': {\r\n              borderRadius: `8px`,\r\n            },\r\n          },\r\n        },\r\n      })(TextField);\r\n    return (\r\n        <Container>\r\n            <ProfileDetailsContainer>\r\n                <StyledBadge color=\"secondary\" badgeContent=\" \" anchorOrigin={{\r\n                    vertical: 'bottom',\r\n                    horizontal: 'right',\r\n                }}>\r\n                    {rectangle}\r\n                </StyledBadge>\r\n                <ProfileDetails>\r\n                    <ProfileName>Bryan Lontoc</ProfileName>\r\n                    <ActiveState>Active</ActiveState>\r\n                </ProfileDetails>\r\n            </ProfileDetailsContainer>\r\n            <CustomTextField\r\n                id=\"outlined-required\"\r\n                placeholder=\"Update your status\"\r\n            />\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`Pause notifications`}/>\r\n            <BodyIconsComponent icons={<EventBusyIcon/>} labels={`Set yourself as away`}/>\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`Saved items`}/>\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`View profile`}/>\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`Notifications`}/>\r\n            <BodyIconsComponent icons={<NotificationsOffOutlinedIcon/>} labels={`Preferences`}/>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import styled, { keyframes } from 'styled-components'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport MaterialTextField from '@mui/material/TextField';\r\nimport MaterialAvatar from '@mui/material/Avatar';\r\nimport MaterialAddIcon from '@mui/icons-material/Add';\r\nimport MaterialLockIcon from '@mui/icons-material/Lock';\r\nimport MaterialButton from '@mui/material/Button'\r\nimport MaterialAvatarGroup from '@mui/material/AvatarGroup';\r\nimport MaterialSendIcon from '@mui/icons-material/Send';\r\nimport MaterialTypography from '@mui/material/Typography';\r\nimport { fadeIn } from 'react-animations';\r\nimport MaterialBox from '@mui/material/Box';\r\nimport MaterialCloseIcon from '@mui/icons-material/Close';\r\n\r\n\r\nconst fadeInAnimation = keyframes`${fadeIn}`;\r\n\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    avatarSize: {\r\n        '& .MuiAvatar-root.MuiAvatar-rounded.MuiAvatar-colorDefault.MuiAvatarGroup-avatar.css-16fxgir-MuiAvatar-root-MuiAvatarGroup-avatar': {\r\n            width: '24px',\r\n            height: '24px',\r\n            fontSize: '0.75rem',\r\n            background: 'unset',\r\n            fontFamily: 'Source Sans Pro',\r\n            color: '#34495e'\r\n        }\r\n    },\r\n    paper: {\r\n        width: '100% !important'\r\n    }\r\n}))\r\n\r\nexport const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    border: '3px solid #34495e',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\nexport const Container = styled.div `\r\n    background: #f6f7fb;\r\n    display: flex;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    max-width: 1024px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    animation: 1s ${fadeInAnimation};\r\n    @media (min-width: 768px) {\r\n        height: 100vh;\r\n    }\r\n`\r\nexport const LogoContainer = styled.div `   \r\n    padding: 1.0625rem 0.6875rem;\r\n    background-color: unset;\r\n    @media (min-width: 768px) {\r\n        background-color: #34495e;\r\n        margin-right: 1.25rem;\r\n    }\r\n`\r\nexport const Logo = styled.img `\r\n    width: 38px;\r\n    height: 38px;\r\n    border-radius: 5px;\r\n`\r\nexport const ContentContainer = styled.div `\r\n    width: 100%;\r\n    height: 100vh;\r\n    @media (min-width: 768px) {\r\n        display: flex;\r\n        height: unset;\r\n    }\r\n` \r\nexport const ContentChannelSection = styled.div `\r\n    display: flex; \r\n    background-color: #34495e;\r\n    align-items: center;\r\n    @media (min-width: 768px) {\r\n        display: unset;\r\n        width: 30%;\r\n        background-color: unset;\r\n        align-items: unset;\r\n    }\r\n`\r\nexport const ContentChannelTitle = styled.div `\r\n    color: #fff;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    font-weight: bold;\r\n    font-size: 1.25rem;\r\n    @media (min-width: 768px) {\r\n        color: #34495e;\r\n        padding: 1.4375rem 0rem 1.0625rem 0rem;\r\n    }\r\n`\r\nexport const ContentChannelSearchBox = styled.div `\r\n    border: solid 1px #979797;\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 0.625rem;\r\n    width: 24.125rem;\r\n    height: 1.9375rem;\r\n`\r\nexport const TextField = styled(MaterialTextField) `\r\n    font-size: 0.75rem;\r\n    width: 100%;\r\n`\r\nexport const ContentUserProfileContainer = styled.div `\r\n    cursor: pointer;\r\n    margin-left: auto;\r\n    margin-right: 0.6875rem;\r\n    @media (min-width: 768px) {\r\n        margin-left: unset;\r\n    }\r\n`\r\nexport const Avatar = styled(MaterialAvatar) `\r\n    width: 38px !important;\r\n    height: 38px !important;\r\n    margin-left: auto;\r\n`\r\nexport const ChannelsAndMessagesContainer = styled.div `\r\n    padding: 0 1.3125rem;\r\n    @media (min-width: 768px) {\r\n        padding: 0;\r\n    }\r\n`\r\nexport const ChannelsTitleHeader = styled.div `\r\n    font-size: 1.125rem;\r\n    color: #34495e;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    font-weight: bold;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    margin-top: 2.125rem; \r\n`\r\nexport const AddIcon = styled(MaterialAddIcon) `\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n`\r\nexport const ChannelsContainer = styled.div `\r\n    height: calc(100vh - 25rem);\r\n    overflow-y: auto;\r\n    \r\n    /* &:hover {\r\n    //     overflow-y: scroll;\r\n    //     transition: overflow-y 2s;\r\n    //     transition-timing-function: ease-in-out;\r\n    // } */\r\n    /* width */\r\n    &::-webkit-scrollbar {\r\n    width: 10px;\r\n    }\r\n    /* Track */\r\n    &::-webkit-scrollbar-track {\r\n    background: #f1f1f1; \r\n    }\r\n    \r\n    /* Handle */\r\n    &::-webkit-scrollbar-thumb {\r\n    background: #888; \r\n    }\r\n\r\n    /* Handle on hover */\r\n    &::-webkit-scrollbar-thumb:hover {\r\n    background: #555; \r\n    }\r\n    @media (min-width: 768px) {\r\n        height: calc(100vh - 31rem);\r\n    }   \r\n`\r\nexport const Channel = styled.div `\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: #85929e;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n    padding: 0.6875rem 0rem 0.6875rem 1.9375rem;\r\n    margin-top: 0.8125rem;\r\n    background: ${props => props.active ? '#fff' : '' };\r\n    border-radius: 7px;\r\n    border-left: ${props => props.active ? '5px solid #9b59b6' : \"\" };\r\n    cursor: pointer;\r\n`\r\nexport const LockIcon = styled(MaterialLockIcon) `\r\n    font-size: 0.875rem !important;\r\n`\r\nexport const UserChatBox = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 0.625rem;\r\n    font-weight: 600;\r\n    color: #85929e;\r\n    margin-top: 1.25rem;\r\n    cursor: pointer;\r\n`\r\nexport const UserAvatar = styled(MaterialAvatar) `\r\n    width: 1.25rem !important;    \r\n    height: 1.25rem !important;\r\n    font-size: 0.8rem !important;\r\n`\r\nexport const ContentChatBoxSection = styled.div `\r\n    width: 75%;\r\n    padding-left: 25px;\r\n    position: relative;\r\n`\r\nexport const ContentChatBoxHeader = styled.div `\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1.125rem 1rem 1.125rem 0;\r\n    justify-content: flex-end;\r\n    gap: 0.5rem;\r\n`\r\nexport const ContentChatBoxBody = styled.div `\r\n    background: #fff;\r\n    padding: 1.5625rem 1.0625rem 1.625rem 2rem;\r\n    height: calc(100vh - 137px);\r\n    border-radius: 0.625rem 0 0 0;\r\n`\r\nexport const ContentChatBoxChannelTitle = styled.div `\r\n    font-weight: bold;\r\n    color: #34495e;\r\n    font-size: 1.125rem;\r\n    margin-left: 0.5rem;\r\n    @media (min-width: 768px) {\r\n        margin-left: unset;\r\n    }\r\n`\r\nexport const ChatBoxAddUserContainer = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    @media (min-width: 768px) {\r\n        width: unset;\r\n        justify-content: space-between;\r\n    }\r\n`\r\nexport const Button = styled(MaterialButton) `\r\n    font-weight: bold !important;\r\n    background: #34495e !important;\r\n    border-radius: 7px !important;\r\n    width: 120px;\r\n    height: 38px;\r\n`\r\nexport const AvatarGroup = styled(MaterialAvatarGroup) `\r\n    background: unset;  \r\n    display: flex;\r\n    justify-content: center;\r\n`\r\nexport const AvatarSmallGroup = styled(MaterialAvatar) `\r\n    width: 24px !important;\r\n    height: 24px !important;\r\n    font-size: 0.8rem !important;\r\n`\r\nexport const AvatarnButton = styled.div `\r\n    display: flex;\r\n    gap: 1.75rem;\r\n    align-items: center;\r\n    margin-left: auto;\r\n    @media (min-width: 768px) {\r\n        margin-left: unset;\r\n    }\r\n`\r\nexport const ChatInput = styled.div `\r\n    border: solid 1px #979797;\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 0.625rem;\r\n    margin-top: 20px;\r\n`\r\nexport const ChatsContainer = styled.div `\r\n    display: flex;\r\n    font-weight: bold;\r\n    font-size: 0.875rem;\r\n    color: #85929e;\r\n    flex-direction: column;\r\n    gap: 17px;\r\n    max-height: calc(100vh - 12rem);\r\n    overflow-y: auto;\r\n    \r\n    /* &:hover {\r\n    //     overflow-y: scroll;\r\n    //     transition: overflow-y 2s;\r\n    //     transition-timing-function: ease-in-out;\r\n    // } */\r\n    /* width */\r\n    &::-webkit-scrollbar {\r\n    width: 10px;\r\n    }\r\n    /* Track */\r\n    &::-webkit-scrollbar-track {\r\n    background: #f1f1f1; \r\n    }\r\n    \r\n    /* Handle */\r\n    &::-webkit-scrollbar-thumb {\r\n    background: #888; \r\n    }\r\n\r\n    /* Handle on hover */\r\n    &::-webkit-scrollbar-thumb:hover {\r\n    background: #555; \r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        max-height: calc(100vh - 16rem);\r\n    }\r\n`\r\nexport const ChatUsernTime = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n`\r\nexport const ChatUserName = styled.div `\r\n    cursor: pointer;\r\n`\r\nexport const ChatUserTime = styled.div `\r\n    font-weight: 400 !important;\r\n    font-size: 0.7rem;\r\n`   \r\nexport const ChatsUserProfile = styled.div `\r\n    display: flex;\r\n    flex-direction: ${props => props.right ? 'row-reverse' : ''};\r\n    gap: 9px;\r\n    padding: 0 1rem 0 0;\r\n    margin-top: 0.8rem;\r\n`\r\nexport const ChatMessageContainer = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 3px;\r\n    width: 80%;\r\n    word-wrap: break-word;\r\n    text-align: ${props => props.right ? 'right' : ''};\r\n    @media (min-width: 768px) {\r\n        width: calc(100vh - 80%);\r\n    }\r\n`\r\nexport const ChatMessages = styled.span `\r\n    font-size: 0.875rem;\r\n    font-weight: normal;\r\n    /* background: #e8edea; */\r\n    border-radius: 8px;\r\n    padding: 0.5rem\r\n`\r\nexport const ChatsMessageandChatInput = styled.div `\r\n    position: absolute;\r\n    bottom: 26px;\r\n    right: 18px;\r\n    left: 22px;\r\n    @media (min-width: 768px) {\r\n        left: 55px;\r\n        right: 26px;\r\n    }\r\n`\r\nexport const UidInputContainer = styled.div `\r\n    border: solid 1px #979797;\r\n    padding: 0.5rem 0.75rem;\r\n    border-radius: 0.625rem;\r\n    margin-bottom: 1rem;\r\n`\r\n\r\nexport const UsersContainer = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: calc(100vh - 26rem);\r\n    overflow-y: auto;\r\n    \r\n    /* // &:hover {\r\n    //     overflow-y: auto;\r\n    //     transition: overflow-y 2s;\r\n    //     transition-timing-function: ease-in-out;\r\n    // } */\r\n    /* width */\r\n    &::-webkit-scrollbar {\r\n    width: 10px;\r\n    }\r\n    /* Track */\r\n    &::-webkit-scrollbar-track {\r\n    background: #f1f1f1; \r\n    }\r\n    \r\n    /* Handle */\r\n    &::-webkit-scrollbar-thumb {\r\n    background: #888; \r\n    }\r\n\r\n    /* Handle on hover */\r\n    &::-webkit-scrollbar-thumb:hover {\r\n    background: #555; \r\n    }\r\n\r\n    @media (min-width: 768px) {\r\n        height: calc(100vh - 24rem);\r\n    }\r\n`\r\nexport const User = styled.span `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    font-weight: 600;\r\n    color: #85929e;\r\n    cursor: pointer;\r\n    padding: 1rem 0.5rem;\r\n    width: 100%;\r\n`\r\nexport const AddIconAddUser = styled(AddIcon) `\r\n    background: #34495e;\r\n    border-radius: 4px;\r\n    &:hover {\r\n        opacity: 0.8;\r\n    }\r\n`\r\nexport const AddUserUsersContainer = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n`\r\nexport const ButtonAddUser = styled(Button) `\r\n    color: #fff !important;\r\n    width: unset;\r\n    text-transform: unset !important;\r\n`\r\nexport const SendIcon = styled(MaterialSendIcon) `\r\n    color: #34495e !important;\r\n    cursor: pointer;\r\n    &:hover {\r\n        opacity: 0.9\r\n    }\r\n`\r\nexport const Typography = styled(MaterialTypography) `\r\n    font-size: 0.8rem !important;\r\n`\r\nexport const UserName = styled.span `\r\n    font-weight: 600;\r\n    color: #85929e;\r\n`\r\nexport const UserDetailsContainer = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    text-align: right;\r\n`\r\nexport const UserID = styled(UserName) `\r\n    font-size: 0.8rem;\r\n`\r\nexport const InviteUsersTitle = styled.div `\r\n    color: #979797;\r\n    font-family: 'Source Sans Pro', sans-serif;\r\n    font-weight: bold;\r\n    font-size: 1rem;\r\n`\r\nexport const ButtonAddChannel = styled(Button) `\r\n    margin-top: 1rem !important;\r\n    width: 100% !important;\r\n`\r\nexport const Box = styled(MaterialBox) `\r\n    width: 17rem !important;\r\n    height: calc(100vh - 7rem);\r\n    @media (min-width: 768px) {\r\n        width: 25rem !important;\r\n        height: unset;\r\n    }\r\n`\r\nexport const BoxDM = styled(Box) `\r\n    height: calc(100vh - 15rem);\r\n    @media (min-width: 768px) {\r\n        height: unset;\r\n    }\r\n`\r\nexport const CloseIcon = styled(MaterialCloseIcon) ``\r\nexport const ModalTitle = styled.div `\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n`\r\nexport const EmptyChatBoxContainer = styled.div `\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n`\r\nexport const Image = styled.img ``\r\nexport const EmptyChatTitle = styled.span `\r\n    font-size: 2rem;\r\n    font-weight: 600;\r\n    color: #85929e;\r\n`","export default __webpack_public_path__ + \"static/media/sampleLogo.4d1763d3.png\";","import {useState} from 'react';\r\n\r\n// Hook\r\nfunction useSessionStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from session storage by key\r\n        const item = window.sessionStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to sessionStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to session storage\r\n        window.sessionStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useSessionStorage;","import {useState} from 'react';\r\n\r\n// Hook\r\nfunction useLocalStorage(key, initialValue) {\r\n    // State to store our value\r\n    // Pass initial state function to useState so logic is only executed once\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n      try {\r\n        // Get from local storage by key\r\n        const item = window.localStorage.getItem(key);\r\n        // Parse stored json or if none return initialValue\r\n        return item ? JSON.parse(item) : initialValue;\r\n      } catch (error) {\r\n        // If error also return initialValue\r\n        console.log(error);\r\n        return initialValue;\r\n      }\r\n    });\r\n    // Return a wrapped version of useState's setter function that ...\r\n    // ... persists the new value to localStorage.\r\n    const setValue = (value) => {\r\n      try {\r\n        // Allow value to be a function so we have same API as useState\r\n        const valueToStore =\r\n          value instanceof Function ? value(storedValue) : value;\r\n        // Save state\r\n        setStoredValue(valueToStore);\r\n        // Save to local storage\r\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n      } catch (error) {\r\n        // A more advanced implementation would handle the error case\r\n        console.log(error);\r\n      }\r\n    };\r\n    return [storedValue, setValue];\r\n  }\r\n\r\n  export default useLocalStorage;","import {useContext, useRef, useEffect, useState} from 'react'\r\nimport {AppContext} from '../Global/AppContext'\r\nimport { debounce } from 'lodash';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nimport useMediaQuery from '@mui/material/useMediaQuery';\r\nimport {retrieveAllUsersAPI, \r\n    retrieveAllChannelsAPI, \r\n    retrieveAChannelAPI,\r\n    inviteUserToChannelAPI, \r\n    createAChannelAPI, \r\n    retrieveAllMessagesinaChannelAPI, \r\n    retrieveAllMessageswithaUserAPI,\r\n    createAMessageAPI } from '../api/api'\r\n\r\nlet int1;\r\nlet int2;\r\nlet int3;\r\nlet int4;\r\n\r\n\r\n\r\nconst useHooks = () => {\r\n    const {isLogin, setIsLogin, loginUser, setLoginUser} = useContext(AppContext)\r\n    const addUserEmail = useRef('')\r\n    const userID = useRef('')\r\n    const [channels, setChannels] = useState('')\r\n    const [selectChannel, setSelectChannel] = useState('')\r\n    const [selectUser, setSelectUser] = useState('')\r\n    const [users, setUsers] = useState('')\r\n    const [searchUserDM, setSearchUserDM] = useState('')\r\n    const [searchResultsDM, setSearchResultsDM] = useState('')\r\n    const chatMessage = useRef('')\r\n    const [allMessages, setAllMessages] = useState(``)\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        message: '',\r\n        warning: false,\r\n    })\r\n    const [duplicateForChannel, setDuplicateForChannel] = useState(false);\r\n    const [duplicateForUser, setDuplicateForUser] = useState(false);\r\n    const [query, setQuery] = useState('')\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [open, setOpen] = useState(false);\r\n    const [openDM, setOpenDM] = useState(false)\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [openAddChannel, setOpenAddChannel] = useState(false);\r\n    const channelName = useRef('')\r\n    const [channel, setChannel] = useState()\r\n    const matchesMD = useMediaQuery('(min-width: 768px)');\r\n\r\n\r\n    // Retrieve All Users\r\n    const handleOpen = async() => {\r\n        setOpen(true)\r\n        if(users.data?.data){\r\n            setIsLoading(false)\r\n        } else {\r\n            setIsLoading(true)\r\n            retrieveAllUsersAPI(loginUser, setIsLoading, setUsers) \r\n        }\r\n    };\r\n    // Function for adding a user in a channel\r\n    const handleAddUser = async(id) => {\r\n        setIsLoading(true)\r\n        setOpen(false)\r\n        inviteUserToChannelAPI(selectChannel, id, loginUser, state, setState, setIsLoading, setOpen)\r\n    }\r\n    const handleCloseAddUserModal = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        };\r\n        setState({\r\n          ...state, open: false,\r\n        })\r\n    };\r\n    const handleClose = () => {\r\n        return (\r\n            setOpen(false), \r\n            setOpenDM(false),\r\n            setOpenAddChannel(false)\r\n        )\r\n    };\r\n    \r\n\r\n    // Pop Over\r\n    const handleClickPopOver = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleClosePopOver = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const openPopOver = Boolean(anchorEl);\r\n    const idPopOver = open ? 'simple-popover' : undefined;\r\n    // Pop Over\r\n\r\n\r\n    // Add Channel Modal\r\n    const handleOpenAddChannel = async() => {\r\n        setOpenAddChannel(true)\r\n        if(users.data?.data){\r\n            setIsLoading(false)\r\n        } else {\r\n            setIsLoading(true)\r\n            retrieveAllUsersAPI(loginUser, setIsLoading, setUsers)\r\n        }\r\n    };\r\n    // Add Channel Modal\r\n\r\n\r\n    // Retrieve all messages in a Channel\r\n    const retrieveMessagesinChannel = async(data) => {\r\n        await axios.all([\r\n            retrieveAllMessagesinaChannelAPI(data, loginUser, setAllMessages)\r\n        ])\r\n    }\r\n\r\n    // For Real Time Fetching Message in Channel\r\n    const intervalRetrieveMessagesinChannel = (data) => {\r\n        clearTimeout(int1)\r\n        clearTimeout(int2)\r\n        setSelectUser('')\r\n        setSelectChannel(data)\r\n        retrieveMessagesinChannel(data)\r\n        retrieveAllUsersAPI(loginUser, setIsLoading, setUsers)\r\n        retrieveAChannelAPI(data, loginUser, isLogin, setChannel, users)\r\n        setDuplicateForChannel(!duplicateForChannel)\r\n        if(duplicateForChannel) {\r\n            int3 = setInterval(() => {\r\n                retrieveMessagesinChannel(data)\r\n            }, 1500);\r\n            clearTimeout(int4)\r\n        } else {\r\n            int4 = setInterval(() => {\r\n                retrieveMessagesinChannel(data)\r\n            }, 1500);\r\n            clearTimeout(int3)\r\n        }\r\n    }\r\n\r\n    // Retrieve all messages in a User\r\n    const retrieveMessagesinUser = async(data) => {\r\n        retrieveAllMessageswithaUserAPI(data, loginUser,setAllMessages)\r\n    }\r\n\r\n    // For Real Time Fetching Message in User\r\n    const intervalRetrieveMessagesinUser = (data) => {\r\n        clearTimeout(int3)\r\n        clearTimeout(int4)\r\n        setSelectChannel('')\r\n        setSelectUser(data)\r\n        handleClose();\r\n        retrieveMessagesinUser(data)\r\n        setDuplicateForUser(!duplicateForUser)\r\n        if(duplicateForUser) {\r\n            int1 = setInterval(() => {   \r\n                retrieveMessagesinUser(data)\r\n            }, 1500);    \r\n            clearTimeout(int2)\r\n        } else {\r\n            int2 = setInterval(() => {   \r\n                retrieveMessagesinUser(data)\r\n            }, 1500);    \r\n            clearTimeout(int1)\r\n        }\r\n    }\r\n    \r\n\r\n    // Create a Message in a channel || user\r\n    const createAMessage = async() => {\r\n        createAMessageAPI(selectChannel, selectUser, chatMessage, loginUser, setSelectChannel, retrieveMessagesinChannel, setSelectUser, retrieveMessagesinUser)\r\n        chatMessage.current.value = ''\r\n    }\r\n\r\n    // Create a Channel\r\n    const createAChannel = async(data) => {\r\n        createAChannelAPI(data, channelName, loginUser, state, setState, setIsLoading, setOpen, isLogin, setChannels, setOpenAddChannel) \r\n    }\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        setSelectChannel('')\r\n        setSelectUser('')\r\n        axios.all([\r\n            // Retrieve All Channels where user was invited\r\n            retrieveAllChannelsAPI(loginUser, isLogin, setChannels),\r\n            retrieveAllUsersAPI(loginUser, setIsLoading, setUsers)\r\n        ])\r\n        \r\n        if(channels){\r\n            setSelectChannel(channels[0])\r\n        }\r\n    }, [])\r\n\r\n\r\n    // Logout a user \r\n    const handleLogout = () => {\r\n        setIsLogin(false)\r\n        Cookies.remove('user')\r\n        setLoginUser({});\r\n    }\r\n\r\n    \r\n    const getFilteredItems = (query, users) => {\r\n        if(!query) {\r\n            return null;\r\n        }\r\n        else if (query.toLowerCase() === 'all') {\r\n            return users?.data?.data;\r\n        }\r\n        return users.data?.data.filter((user) => user.uid.includes(query))\r\n    }\r\n\r\n    const handleOpenDM = () => {\r\n        setOpenDM(true)\r\n        if(users.data?.data){\r\n            setIsLoading(false)\r\n        } else {\r\n            setIsLoading(true)\r\n            retrieveAllUsersAPI(loginUser, setIsLoading, setUsers)\r\n        }\r\n    };\r\n    const filteredItems = getFilteredItems(query, users)\r\n    const updateQuery = (e) => setQuery(e?.target?.value);\r\n    const debounceOnChange = debounce(updateQuery, 500)\r\n\r\n\r\n\r\n    return {\r\n        loginUser,\r\n        addUserEmail,\r\n        userID,\r\n        searchUserDM,\r\n        searchResultsDM,\r\n        allMessages,\r\n        isLoading,\r\n        handleOpen,\r\n        handleAddUser,\r\n        handleCloseAddUserModal,\r\n        openAddChannel,\r\n        handleClickPopOver,\r\n        handleClosePopOver,\r\n        openPopOver,\r\n        idPopOver,\r\n        handleOpenAddChannel,\r\n        intervalRetrieveMessagesinChannel,\r\n        intervalRetrieveMessagesinUser,\r\n        createAMessage,\r\n        handleLogout,\r\n        openDM,\r\n        handleOpenDM,\r\n        filteredItems,\r\n        debounceOnChange,\r\n        channels,\r\n        selectChannel,\r\n        selectUser,\r\n        users,\r\n        chatMessage,\r\n        open,\r\n        handleClose,\r\n        query,\r\n        anchorEl,\r\n        state,\r\n        channelName,\r\n        createAChannel,\r\n        matchesMD,\r\n        channel\r\n    }\r\n}\r\n\r\nexport default useHooks","import React from 'react'\r\nimport useSessionStorage from '../helpers/useSessionStorage'\r\nimport useLocalStorage from '../helpers/useLocalStorage'\r\nexport const AppContext = React.createContext();\r\n\r\nconst AppProvider = (props) => {\r\n    const [isLogin, setIsLogin] = useSessionStorage('isLogin', '');\r\n    const [loginUser, setLoginUser] = useLocalStorage('loginUser', '')\r\n    const state = {\r\n        isLogin,\r\n        loginUser\r\n    }\r\n\r\n    const func = {\r\n        setIsLogin,\r\n        setLoginUser\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={{ ...state, ...func }}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AppProvider;","import axios from 'axios'\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nlet url = `https://slackapi.avionschool.com/api/v1`\r\n\r\n// Creating User Session\r\nexport const creatingUserSessionAPI = async(email, password, state, setState, setLoginUser, setIsLogin, history) => {\r\n    await axios({\r\n        url: `${url}/auth/sign_in`,\r\n        data: {\r\n            'email': email.current.value,\r\n            'password': password.current.value,\r\n        },\r\n        headers: {},\r\n        method: 'POST'\r\n        })\r\n    .then((res) => \r\n    {\r\n        if(res.status === 200){     \r\n            Cookies.set('user', 'loginTrue', { expires: 1 })\r\n            setState({...state, \r\n            open: true,\r\n            response: res?.data,\r\n            })\r\n            setLoginUser(res)\r\n            setIsLogin(true)\r\n        }\r\n        setTimeout(() => {\r\n            setState({...state, isLoading: false})\r\n            history.push(`/app/${res.data?.data.id}`)\r\n        },)\r\n    } \r\n    )\r\n    .catch((err) => \r\n    {\r\n        console.log({err})\r\n        const { errors } = err.response.data;\r\n        if(err.response.status === 401) {\r\n            setState({...state, \r\n                open: true,\r\n                isLoading: false,\r\n                responseMessage: errors[errors.length - 1],\r\n                warning: true\r\n            })\r\n        } \r\n        else {\r\n            setState({...state, \r\n                open: true,\r\n                isLoading: false,\r\n                responseMessage: `Internal Server Error`,\r\n                warning: true\r\n            })\r\n        } \r\n    }\r\n    )\r\n}\r\n\r\n// User Registration\r\nexport const userRegistrationAPI = async(email, password, retypePassword, state, setState, history) => {\r\n    await axios({\r\n        url: `${url}/auth`,\r\n        data: {\r\n          'email': email.current.value,\r\n          'password': password.current.value,\r\n          'password_confirmation': retypePassword.current.value,\r\n        },\r\n        headers: {},\r\n        method: 'POST'\r\n      })\r\n      .then((res) => \r\n        {\r\n            if(res.status === 200){\r\n                setState({...state, \r\n                  open: true,\r\n                  loading: false,\r\n                  response: res,\r\n                  responseMessage: `Registered successfully!`,\r\n                  warning: false\r\n                })\r\n                setTimeout(() => {\r\n                  history.push('/login')\r\n                }, 1500)\r\n            }\r\n        },\r\n      )\r\n      .catch((err) =>\r\n        { \r\n          const {full_messages} = err.response.data?.errors;\r\n          console.log({full_messages})\r\n          if(err.response.status === 422) {\r\n            setState({...state, \r\n              open: true,\r\n              loading: false,\r\n              response: err.response, \r\n              responseMessage: full_messages[full_messages.length - 1], \r\n              warning: true\r\n            })\r\n          }\r\n        }\r\n      )\r\n}\r\n\r\n// Retrieve All Users\r\nexport const retrieveAllUsersAPI = async(loginUser, setIsLoading, setUsers) => {\r\n    await axios({\r\n        url: `${url}/users`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n    })  \r\n    .then((res) => \r\n        {\r\n            if(res.status === 200) {\r\n                setIsLoading(false)\r\n                setUsers(res)\r\n            } \r\n        }\r\n    )\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n\r\n// Retrieve all channels\r\nexport const retrieveAllChannelsAPI = async(loginUser, isLogin, setChannels) => {\r\n    await axios({\r\n        url: `${url}/channels`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n        }) \r\n    .then((res) => \r\n        {\r\n            if(isLogin){\r\n                setChannels(res?.data.data)\r\n            }\r\n        }\r\n    )\r\n    .catch((err) => {\r\n        if(!isLogin){\r\n            return\r\n        } else {\r\n            console.error('Error in main page', err)\r\n        }\r\n    })\r\n}\r\n\r\n// Retrieve a Channel\r\nexport const retrieveAChannelAPI = async(data, loginUser, isLogin, setChannel, users) => {\r\n    axios({\r\n        url: `${url}/channels/${data.id}`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n        }) \r\n    .then((res) => \r\n        {\r\n            if(isLogin){\r\n                setChannel(res?.data.data.channel_members.map((channel) => {return users.data?.data.filter((user) => {return user.id === channel.user_id})}))\r\n            }\r\n        }\r\n    )\r\n    .catch((err) => {\r\n        if(!isLogin){\r\n            return\r\n        } else {\r\n            console.error('Error in main page', err)\r\n        }\r\n    })\r\n}\r\n\r\n// Invite User to a channel\r\nexport const inviteUserToChannelAPI = async(selectChannel, id, loginUser, state, setState, setIsLoading, setOpen) => {\r\n    await axios({\r\n        url: `${url}/channel/add_member`,\r\n        data: {\r\n            'id': selectChannel.id,\r\n            'member_id': id,\r\n        },\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'POST'\r\n    })  \r\n    .then((res) => \r\n        {   \r\n            if(res.status === 200) {\r\n                // setTimeout(() => {\r\n                        if(res.data.data?.id) {\r\n                            setState({...state, \r\n                                open: true, \r\n                                message: `Added Successfully!`, \r\n                                warning: false\r\n                            })\r\n                            setIsLoading(false)\r\n                            setOpen(false)\r\n                        } \r\n                        else {\r\n                            if(res.data?.errors[0] === `User is already a member of this channel!`){\r\n                                setState({...state, \r\n                                    open: true, \r\n                                    message: `User is already a member of this channel!`, \r\n                                    warning: true\r\n                                })\r\n                                setIsLoading(false)\r\n                                setOpen(false)\r\n                            } else {\r\n                                setState({...state, \r\n                                    open: true, \r\n                                    message: `Invalid user`, \r\n                                    warning: true\r\n                                })\r\n                                setIsLoading(false)\r\n                                setOpen(false)\r\n                            } \r\n                        } \r\n                // }, 1000);\r\n            }\r\n        }\r\n    )\r\n    .catch((err) => {\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n// Create a Channel\r\nexport const createAChannelAPI = async(data, channelName, loginUser, state, setState, setIsLoading, setOpen, isLogin, setChannels, setOpenAddChannel) => {\r\n    await axios({\r\n        url: `${url}/channels`,\r\n        data: {\r\n            'name': channelName.current.value,\r\n            'user_ids': data\r\n        },\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'POST'\r\n    })\r\n    .then((res) => \r\n        {\r\n            if(res.data.data?.id) {\r\n                setState({...state, \r\n                    open: true, \r\n                    message: `Added Successfully!`, \r\n                    warning: false\r\n                })\r\n                setIsLoading(false)\r\n                setOpen(false)\r\n                retrieveAllChannelsAPI(loginUser, isLogin, setChannels)\r\n                setOpenAddChannel(false)\r\n                channelName.current.value = '';\r\n            } \r\n            else {\r\n                if(res.data?.errors[0] === `Name has already been taken`){\r\n                    setState({...state, \r\n                        open: true, \r\n                        message: `Name has already been taken!`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                } else if (res.data?.errors[0] === `Name is too short (minimum is 3 characters)`) {\r\n                    setState({...state, \r\n                        open: true, \r\n                        message: `Name is too short (minimum is 3 characters)`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                } else if (res.data?.errors[0] === `Name is too long (maximum is 15 characters)`) {\r\n                    setState({...state, \r\n                        open: true, \r\n                        message:  `Name is too long (maximum is 15 characters)`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                } else if (res.data?.errors.length === 2) {\r\n                    setState({...state, \r\n                        open: true, \r\n                        message:  `Name can't be blank.  Name is too short (minimum is 3 characters)`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                }  else {\r\n                    setState({...state, \r\n                        open: true, \r\n                        message:  `Error`, \r\n                        warning: true\r\n                    })\r\n                    setIsLoading(false)\r\n                    setOpen(false)\r\n                }\r\n            } \r\n        }\r\n    )   \r\n    .catch((err) => {console.log(err)})\r\n}\r\n\r\n// Retrieve All Messages in a Channel\r\nexport const retrieveAllMessagesinaChannelAPI = async(data, loginUser, setAllMessages) => {\r\n    await axios({\r\n        url: `${url}/messages?receiver_id=${data.id}&receiver_class=Channel`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n        }) \r\n    .then((res) => \r\n        {\r\n            if(res?.status === 200) {\r\n                setAllMessages(res)\r\n            } \r\n        }\r\n    )   \r\n    .catch((err) => {console.log(err)})\r\n}\r\n\r\n// Retrieve All Messages with a User\r\nexport const retrieveAllMessageswithaUserAPI = async(data, loginUser,setAllMessages) => {\r\n    await axios({\r\n        url: `${url}/messages?receiver_id=${data.id}&receiver_class=User`,\r\n        data: {},\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'GET'\r\n        }) \r\n    .then((res) => \r\n        {\r\n            if(res?.status === 200) {\r\n                setAllMessages(res)\r\n            } \r\n        }\r\n    )   \r\n    .catch((err) => {console.log(err)})\r\n}\r\n\r\n// Create a Message in a channel || user\r\nexport const createAMessageAPI = async(selectChannel, selectUser, chatMessage, loginUser, setSelectChannel, retrieveMessagesinChannel, setSelectUser, retrieveMessagesinUser) => {\r\n    await axios({\r\n        url: `${url}/messages`,\r\n        data: {\r\n            'receiver_id': selectChannel.id || selectUser.id,\r\n            'receiver_class': selectChannel ? 'Channel' : 'User',\r\n            'body': chatMessage.current.value,\r\n        },\r\n        headers: {\r\n            'access-token': loginUser.headers?.['access-token'],\r\n            'client': loginUser.headers?.client,\r\n            'expiry': loginUser.headers?.expiry,\r\n            'uid': loginUser.headers?.uid\r\n        } || {},\r\n        method: 'POST'\r\n    })\r\n    .then((res) => \r\n        {\r\n            if(selectChannel){\r\n                setSelectChannel(selectChannel)\r\n                retrieveMessagesinChannel(selectChannel)\r\n            } \r\n            else if (selectUser) {\r\n                setSelectUser(selectUser)\r\n                retrieveMessagesinUser(selectUser)\r\n            }\r\n        }\r\n    )   \r\n    .catch((err) => {console.log(err)})\r\n}","\r\nexport const emailRemover = (email) => {\r\n    return email.split(\"@\")[0]\r\n}\r\n\r\nexport const convertStringtoArray = (string) => {\r\n    return string.split(\" \");\r\n}","\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\nimport { \r\n    TextField,\r\n    AddIcon, \r\n    ButtonAddChannel, \r\n    UidInputContainer, \r\n    UsersContainer, \r\n    User, \r\n    InviteUsersTitle, \r\n    ContentContainer, \r\n    AddUserUsersContainer, \r\n    ContentUserProfileContainer, \r\n    ButtonAddUser, \r\n    Avatar,\r\n    AvatarGroup,\r\n    AvatarSmallGroup,\r\n    Box,\r\n    CloseIcon,\r\n    ModalTitle\r\n} from './components'\r\nimport {emailRemover} from '../helpers/helpers'\r\nimport {useState} from 'react'\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Index = (props) => {\r\n    const {\r\n        openAddChannel, \r\n        handleCloseChannel, \r\n        createAChannel, \r\n        channelName, \r\n        inputUsers, \r\n        filteredItems,\r\n        debounceOnChange,\r\n        classes,\r\n        matchesMD\r\n    } = props;\r\n\r\n    const [usersToAdd, setUsersToAdd] = useState([])\r\n    const [openPreAddedUsersmodal, setOpenPreAddedUsersmodal] = useState(false)\r\n\r\n    \r\n\r\n    const addUsersToChannel = (user) => {\r\n        setUsersToAdd([...usersToAdd, user])\r\n    }\r\n    const handleOpenPreAddedUsers = () => {\r\n        setOpenPreAddedUsersmodal(true)\r\n    }\r\n    \r\n    const handleClose = () => {\r\n        return (\r\n            setOpenPreAddedUsersmodal(false)\r\n        )\r\n    };\r\n\r\n    const deleteAddedUser = (index) => {\r\n        usersToAdd.splice(index, 1)\r\n        setUsersToAdd([...usersToAdd])\r\n    }\r\n\r\n\r\n      \r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                keepMounted\r\n                open={openAddChannel}\r\n                onClose={handleCloseChannel}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                <ModalTitle>\r\n                    <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Create a Channel\r\n                    </Typography>\r\n                        <CloseIcon onClick={handleCloseChannel}/>\r\n                </ModalTitle>\r\n                <Typography id=\"keep-mounted-modal-description\" sx={{ mt: 2 }}>\r\n                    <UidInputContainer>\r\n                        <TextField \r\n                            id=\"standard-basic\"\r\n                            placeholder=\"e.g Work Channel\" \r\n                            variant=\"standard\" \r\n                            InputProps={{ \r\n                                disableUnderline: true, \r\n                                classes: {\r\n                                input: classes.resize,\r\n                            }, }}\r\n                            inputRef={channelName}\r\n                        />\r\n                    </UidInputContainer>\r\n                    <InviteUsersTitle>Invite users to the new channel</InviteUsersTitle>\r\n                    <UidInputContainer>\r\n                        <TextField \r\n                            id=\"standard-basic\"\r\n                            variant=\"standard\" \r\n                            InputProps={{ \r\n                                disableUnderline: true, \r\n                                classes: {\r\n                                input: classes.resize,\r\n                            }, }}\r\n                            inputRef={inputUsers}\r\n                            onChange={debounceOnChange}\r\n                            placeholder=\"user ID\"\r\n                        />\r\n                    </UidInputContainer>\r\n                    <InviteUsersTitle>Note: Type 'all' to load all users</InviteUsersTitle>\r\n                    <AvatarGroup max={5} variant=\"rounded\" className={classes.avatarSize} style={{cursor: 'pointer'}} onClick={handleOpenPreAddedUsers}>\r\n                        {usersToAdd.map(user => {\r\n                            return (\r\n                                <AvatarSmallGroup alt={emailRemover(user.uid).toUpperCase()} src=\"/static/images/avatar/1.jpg\" variant=\"rounded\" />\r\n                            )\r\n                        })}\r\n                    </AvatarGroup>\r\n                    <UsersContainer>\r\n                        {filteredItems === null ? '' :\r\n                            filteredItems.length > 0 ?\r\n                                filteredItems.map((user, index) => {\r\n                                    return (\r\n                                    <AddUserUsersContainer key={index} onClick={() => addUsersToChannel(user)}>\r\n                                        <ContentUserProfileContainer>\r\n                                            <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                                {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                            </Avatar>\r\n                                        </ContentUserProfileContainer>\r\n                                        <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}{matchesMD && <ButtonAddUser><AddIcon /></ButtonAddUser>}</User>\r\n                                    </AddUserUsersContainer>\r\n                                )})\r\n                                :\r\n                                <h1 style={{textAlign: 'center'}}>No user available</h1>\r\n                        }\r\n                    </UsersContainer>\r\n                    <ButtonAddChannel variant=\"contained\" startIcon={<AddIcon />} onClick={() => createAChannel(usersToAdd)}>Add Channel</ButtonAddChannel>\r\n                </Typography>\r\n                </Box>\r\n            </Modal> \r\n\r\n\r\n            <Modal\r\n                keepMounted\r\n                open={openPreAddedUsersmodal}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <Box sx={style} style={{maxHeight: '35rem',\r\n                    overflowY: 'auto',\r\n                    minHeight: '35rem'}}>\r\n                        {usersToAdd.map((user, index) => {\r\n                            return (\r\n                                <AddUserUsersContainer key={index}>\r\n                                    <ContentUserProfileContainer>\r\n                                        <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                            {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                    </ContentUserProfileContainer>\r\n                                    <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}<ButtonAddUser onClick={() => deleteAddedUser(index)}>Delete</ButtonAddUser></User>\r\n                                </AddUserUsersContainer>\r\n                            )\r\n                        })}\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import {\r\n    UidInputContainer,  \r\n    TextField, \r\n    UsersContainer, \r\n    User,\r\n    AddIconAddUser, \r\n    ContentUserProfileContainer,\r\n    Avatar,\r\n    AddUserUsersContainer,\r\n    ButtonAddUser,\r\n    InviteUsersTitle,\r\n    BoxDM,\r\n    ModalTitle,\r\n    CloseIcon\r\n} from './components'\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddUserComponent = (props) => {\r\n    const {\r\n        open,\r\n        handleClose,\r\n        style,\r\n        classes,\r\n        userID,\r\n        searchUser,\r\n        getSearchUser,\r\n        users,\r\n        emailRemover,\r\n        handleAddUser,\r\n        handleDebounceAddUser,\r\n        filteredItems,\r\n        debounceOnChange,\r\n        query,\r\n        matchesMD\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <>\r\n           <Modal\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <BoxDM sx={style}>\r\n                <ModalTitle>\r\n                    <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Add user\r\n                    </Typography>\r\n                        <CloseIcon onClick={handleClose}/>\r\n                </ModalTitle>\r\n                <Typography id=\"keep-mounted-modal-description\" sx={{ mt: 2 }}>\r\n                    {/* <form onSubmit={(e) => {\r\n                        // e.preventDefault();\r\n                        // handleAddUser(userID.current.value)\r\n                        // userID.current.value = ''\r\n                    }}> */}\r\n                        <UidInputContainer>\r\n                            <TextField \r\n                                id=\"standard-basic\"\r\n                                variant=\"standard\" \r\n                                type='text'\r\n                                InputProps={{ \r\n                                    disableUnderline: true, \r\n                                    classes: {\r\n                                    input: classes.resize,\r\n                                }, }}\r\n                                inputRef={userID}\r\n                                // value={searchUser}\r\n                                // onChange={getSearchUser}\r\n                                onChange={debounceOnChange}\r\n                                placeholder=\"user ID\"\r\n                            />\r\n                        </UidInputContainer>\r\n                    {/* </form> */}\r\n                    {/* <UsersContainer>\r\n                        {users.length > 1 ?\r\n                            users.map((user, index) => {\r\n                                return (\r\n                                <AddUserUsersContainer key={index}>\r\n                                    <ContentUserProfileContainer>\r\n                                        <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                            {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                    </ContentUserProfileContainer>\r\n                                    <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}<ButtonAddUser onClick={() => handleAddUser(user.id)}>Add</ButtonAddUser></User>\r\n                                </AddUserUsersContainer>\r\n                            )})\r\n                            :\r\n                            <h1 style={{textAlign: 'center'}}>No user available</h1>\r\n                        }\r\n                    </UsersContainer> */}\r\n                    <InviteUsersTitle>Note: Type 'all' to load all users</InviteUsersTitle>\r\n                    <UsersContainer>\r\n                        {filteredItems === null ? '' :\r\n                        filteredItems.length > 0 ?\r\n                            filteredItems.map((user, index) => {\r\n                                return (\r\n                                <AddUserUsersContainer key={index} onClick={() => handleAddUser(user.id)}>\r\n                                    <ContentUserProfileContainer>\r\n                                        <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                            {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                    </ContentUserProfileContainer>\r\n                                    <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}{matchesMD && <ButtonAddUser>Add</ButtonAddUser>}</User>\r\n                                </AddUserUsersContainer>\r\n                            )})\r\n                            :\r\n                            <h1 style={{textAlign: 'center'}}>No user available</h1>\r\n                        }\r\n                    </UsersContainer>\r\n                </Typography>\r\n                </BoxDM>\r\n            </Modal> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUserComponent\r\n","import React, {forwardRef} from 'react'\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = forwardRef(function Alert(props, ref) {\r\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n  });\r\n\r\nconst Index = (props) => {\r\n    const {isOpen, close, message, status} = props;\r\n\r\n    return (\r\n        <>\r\n            <Snackbar open={isOpen} autoHideDuration={4000} \r\n                onClose={close} \r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'center',\r\n                  }}>\r\n                <Alert \r\n                    onClose={close} \r\n                    severity={status} sx={{ width: '100%' }}>\r\n                    {message}\r\n                </Alert>\r\n            </Snackbar>  \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import {\r\n    UidInputContainer,  \r\n    TextField, \r\n    UsersContainer, \r\n    User,\r\n    AddIconAddUser, \r\n    ContentUserProfileContainer,\r\n    Avatar,\r\n    AddUserUsersContainer,\r\n    ButtonAddUser,\r\n    InviteUsersTitle,\r\n    BoxDM,\r\n    CloseIcon,\r\n    ModalTitle\r\n} from './components'\r\nimport Modal from '@mui/material/Modal';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AddUserComponent = (props) => {\r\n    const {\r\n        open,\r\n        handleClose,\r\n        style,\r\n        classes,\r\n        addUserEmail,\r\n        searchUser,\r\n        getSearchUser,\r\n        users,\r\n        emailRemover,\r\n        intervalRetrieveMessagesinUser,\r\n        debounceDMSearch,\r\n        setQuery,\r\n        filteredItems,\r\n        debounceOnChange,\r\n        matchesMD,\r\n        toggleDrawer\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n           <Modal\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"keep-mounted-modal-title\"\r\n                aria-describedby=\"keep-mounted-modal-description\"\r\n            >\r\n                <BoxDM sx={style}>\r\n                <ModalTitle>\r\n                    <Typography id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\">\r\n                        Direct message\r\n                    </Typography>\r\n                        <CloseIcon onClick={handleClose}/>\r\n                </ModalTitle>\r\n                <Typography id=\"keep-mounted-modal-description\" sx={{ mt: 2 }}>\r\n                    <UidInputContainer>\r\n                        <TextField \r\n                            id=\"standard-basic\"\r\n                            variant=\"standard\" \r\n                            InputProps={{ \r\n                                disableUnderline: true, \r\n                                classes: {\r\n                                input: classes.resize,\r\n                            }, }}\r\n                            inputRef={addUserEmail}\r\n                            // value={searchUser}\r\n                            // onChange={getSearchUser}\r\n                            // onChange={(e) => setQuery(e.target.value)}\r\n                            onChange={debounceOnChange}\r\n                            placeholder=\"user ID\"\r\n                        />\r\n                    </UidInputContainer>\r\n                    <InviteUsersTitle>Note: Type 'all' to load all users</InviteUsersTitle>\r\n                    <UsersContainer>\r\n                        {filteredItems === null ? '' :\r\n                        filteredItems.length > 0 ?\r\n                            filteredItems.map((user, index) => {\r\n                                return (\r\n                                <AddUserUsersContainer key={index} onClick={() => {return (intervalRetrieveMessagesinUser(user), toggleDrawer())}}>\r\n                                    <ContentUserProfileContainer>\r\n                                        <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src=\"#\">\r\n                                            {emailRemover(user.uid).charAt(0).toUpperCase()}\r\n                                        </Avatar>\r\n                                    </ContentUserProfileContainer>\r\n                                    <User>{emailRemover(user.uid).substring(0, 25) + (emailRemover(user.uid).length > 25? '...' : '')}{matchesMD && <ButtonAddUser>message</ButtonAddUser>}</User>\r\n                                </AddUserUsersContainer>\r\n                            )})\r\n                            :\r\n                            <h1 style={{textAlign: 'center'}}>No user available</h1>\r\n                        }\r\n                    </UsersContainer>\r\n                </Typography>\r\n                </BoxDM>\r\n            </Modal> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default AddUserComponent\r\n","import {\r\n    ChatsUserProfile, \r\n    ContentUserProfileContainer,\r\n    Avatar,\r\n    ChatMessageContainer,\r\n    ChatUsernTime,\r\n    ChatUserName,\r\n    ChatUserTime,\r\n    ChatMessages\r\n} from './components'\r\n\r\nconst ChatUserProfileComponent = (props) => {\r\n    const {\r\n        imgSrc,\r\n        initial,\r\n        chatUserName,\r\n        chatUserTime,\r\n        chatMessage,\r\n        loginUser,\r\n        data,\r\n    } = props;\r\n\r\n    return (\r\n        <>\r\n           <ChatsUserProfile right={loginUser.data.data?.uid === data.sender.uid}>\r\n                <ContentUserProfileContainer style={{marginLeft: 'unset'}}>\r\n                    <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\" src={imgSrc}>\r\n                        {initial}\r\n                    </Avatar>\r\n                </ContentUserProfileContainer>\r\n                <ChatMessageContainer right={loginUser.data.data?.uid === data.sender.uid}>\r\n                    <ChatUsernTime right={loginUser.data.data?.uid === data.sender.uid}>\r\n                        <ChatUserName>{chatUserName}</ChatUserName>\r\n                        <ChatUserTime>{chatUserTime}</ChatUserTime>\r\n                    </ChatUsernTime>\r\n                    <ChatMessages>{chatMessage}</ChatMessages>\r\n                </ChatMessageContainer>\r\n            </ChatsUserProfile> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatUserProfileComponent\r\n","export default __webpack_public_path__ + \"static/media/Group-Chat-pana.fc4b5d17.png\";","import {\r\n    ContentChatBoxBody,\r\n    ChatBoxAddUserContainer,\r\n    ContentChatBoxChannelTitle,\r\n    AvatarnButton,\r\n    Button,\r\n    ChatsMessageandChatInput,\r\n    ChatsContainer,\r\n    ChatInput,\r\n    TextField,\r\n    SendIcon,\r\n    EmptyChatBoxContainer,\r\n    Image,\r\n    EmptyChatTitle\r\n} from './components'\r\nimport ChatUserProfileComponent from './ChatUserProfileComponent'\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport { emailRemover } from '../helpers/helpers';\r\nimport moment from 'moment';\r\nimport ScrollableFeed from 'react-scrollable-feed';\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\nimport EmptyChatPic from '../../assets/Group-Chat-pana.png'\r\n\r\n\r\nconst ContentChatBoxBodyComponent = (props) => {\r\n    const {\r\n        selectChannel,\r\n        selectUser,\r\n        handleOpen,\r\n        allMessages,\r\n        loginUser,\r\n        createAMessage,\r\n        classes,\r\n        chatMessage,\r\n        handleCloseDrawer,\r\n        matchesMD\r\n    } = props;\r\n    return (\r\n        <ContentChatBoxBody>\r\n                       <ChatBoxAddUserContainer>\r\n                            {!matchesMD && <ArrowBackIcon onClick={handleCloseDrawer}/>}\r\n                            <ContentChatBoxChannelTitle>{selectChannel ? selectChannel.name : selectUser.uid}</ContentChatBoxChannelTitle>\r\n                            <AvatarnButton>\r\n                                {/* <AvatarGroup max={5} variant=\"rounded\" className={classes.avatarSize} >\r\n                                    <AvatarSmallGroup alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" variant=\"rounded\" />\r\n                                    <AvatarSmallGroup alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" variant=\"rounded\" />\r\n                                </AvatarGroup> */}\r\n                            {selectChannel && <Button variant=\"contained\" onClick={handleOpen} >ADD USER</Button> }\r\n                            </AvatarnButton>\r\n                       </ChatBoxAddUserContainer>\r\n\r\n                       {(selectChannel || selectUser)  ?\r\n                       <ChatsMessageandChatInput>\r\n                                <ChatsContainer>\r\n                                    {/* <ScrollableFeed forceScroll='true'> */}\r\n                                        {allMessages.data?.data.map((data, index)=> {\r\n                                            return (\r\n                                            <ChatUserProfileComponent \r\n                                                key={index}\r\n                                                imgSrc={''} \r\n                                                initial={emailRemover(data.sender.uid).charAt(0).toUpperCase()}\r\n                                                chatUserName={emailRemover(data.sender.uid)}\r\n                                                chatUserTime={moment(data.created_at).fromNow()}\r\n                                                chatMessage={data.body}\r\n                                                loginUser={loginUser}\r\n                                                data={data}\r\n                                            />)\r\n                                        })}\r\n                                    {/* </ScrollableFeed> */}\r\n                                </ChatsContainer>\r\n\r\n                            <form onSubmit={(e) => \r\n                                {\r\n                                    e.preventDefault()\r\n                                    createAMessage()\r\n                                }\r\n                            }>\r\n                                <ChatInput>\r\n                                    <TextField \r\n                                        id=\"standard-basic\"\r\n                                        variant=\"standard\" \r\n                                        InputProps={{ \r\n                                            disableUnderline: true, \r\n                                            classes: {\r\n                                            input: classes.resize,\r\n                                            },\r\n                                            endAdornment: (\r\n                                                <InputAdornment position=\"start\">\r\n                                                  <SendIcon onClick={createAMessage}/>\r\n                                                </InputAdornment>\r\n                                              ), }}\r\n                                        \r\n                                        placeholder={`Send a message to ${selectChannel ? selectChannel.name : emailRemover(selectUser.uid)}`}\r\n                                        inputRef={chatMessage}\r\n                                    />\r\n                                </ChatInput>\r\n                                \r\n                            </form>\r\n                            \r\n                       </ChatsMessageandChatInput>\r\n                       : \r\n                       <EmptyChatBoxContainer>\r\n                           <Image src={EmptyChatPic} width=\"100%\" />\r\n                           <EmptyChatTitle>\r\n                                Let's Chat!\r\n                            </EmptyChatTitle>\r\n                       </EmptyChatBoxContainer>\r\n                        }\r\n                   </ContentChatBoxBody>\r\n    )\r\n}\r\n\r\nexport default ContentChatBoxBodyComponent\r\n","import {\r\n    ContentChatBoxSection,\r\n    ContentChatBoxHeader,\r\n    UserDetailsContainer,\r\n    UserID,\r\n    UserName,\r\n    ContentUserProfileContainer,\r\n    ContentChatBoxBody,\r\n    ChatBoxAddUserContainer,\r\n    ContentChatBoxChannelTitle,\r\n    AvatarnButton,\r\n    Button,\r\n    ChatsMessageandChatInput,\r\n    ChatsContainer,\r\n    ChatInput,\r\n    TextField,\r\n    SendIcon,\r\n    Avatar\r\n} from './components'\r\n\r\nimport {emailRemover} from '../helpers/helpers'\r\nimport ContentChatBoxBodyComponent from './ContentChatBoxBody';\r\n\r\nconst ContentChatBoxSectionComponent = (props) => {\r\n    const {\r\n        loginUser,\r\n        handleClickPopOver,\r\n        selectChannel,\r\n        selectUser,\r\n        allMessages,\r\n        handleOpen,\r\n        createAMessage,\r\n        classes,\r\n        chatMessage,\r\n        matchesMD\r\n    } = props;\r\n    return (\r\n        <ContentChatBoxSection>\r\n                   <ContentChatBoxHeader>\r\n                        {/* <ContentChannelSearchBox>\r\n                            <TextField \r\n                                id=\"standard-basic\"\r\n                                variant=\"standard\" \r\n                                InputProps={{ \r\n                                    disableUnderline: true}}\r\n                                placeholder=\"Search Avion School\"\r\n                            />\r\n                        </ContentChannelSearchBox> */}\r\n                        <UserDetailsContainer>\r\n                            <UserID>ID: {loginUser.data.data?.id}</UserID>\r\n                            <UserName>{emailRemover(loginUser.data.data?.uid)}</UserName>\r\n                        </UserDetailsContainer>\r\n                        <ContentUserProfileContainer onClick={handleClickPopOver}>\r\n                            <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\">\r\n                                {loginUser.data?.data ? emailRemover(loginUser.data.data?.email).charAt(0).toUpperCase() : null}\r\n                            </Avatar>\r\n                        </ContentUserProfileContainer>\r\n                   </ContentChatBoxHeader>\r\n\r\n                   \r\n                   <ContentChatBoxBodyComponent \r\n                        selectChannel={selectChannel}\r\n                        selectUser={selectUser}\r\n                        handleOpen={handleOpen}\r\n                        allMessages={allMessages}\r\n                        loginUser={loginUser}\r\n                        createAMessage={createAMessage}\r\n                        classes={classes}\r\n                        chatMessage={chatMessage}\r\n                        matchesMD={matchesMD}\r\n                   />\r\n               </ContentChatBoxSection>\r\n    )\r\n}\r\n\r\nexport default ContentChatBoxSectionComponent\r\n","import {\r\n    ContentChannelSection,\r\n    ContentChannelTitle,\r\n    ChannelsAndMessagesContainer,\r\n    ChannelsTitleHeader,\r\n    AddIcon,\r\n    ChannelsContainer,\r\n    Channel,\r\n    LogoContainer,\r\n    Logo,\r\n    ContentUserProfileContainer,\r\n    Avatar\r\n} from './components'\r\nimport UserChatBoxComponent from './UserChatBoxComponent';\r\nimport channel_logo from '../../assets/sampleLogo.png'\r\nimport { emailRemover } from '../helpers/helpers';\r\nimport React from 'react';\r\n\r\n\r\nconst ContentChannelSectionComponent = (props) => {\r\n    const {\r\n        handleOpenAddChannel,\r\n        channels,\r\n        selectChannel,\r\n        intervalRetrieveMessagesinChannel,\r\n        handleOpenDM,\r\n        matchesMD,\r\n        handleClickPopOver,\r\n        loginUser\r\n    } = props;\r\n\r\n\r\n    return (\r\n        <ContentChannelSection>\r\n            {!matchesMD &&\r\n                <LogoContainer>\r\n                    <Logo src={channel_logo} />\r\n                </LogoContainer>\r\n            }\r\n            <ContentChannelTitle>Avion School</ContentChannelTitle>\r\n\r\n            {!matchesMD && \r\n            <ContentUserProfileContainer onClick={handleClickPopOver}>\r\n                <Avatar sx={{ bgcolor: 'green' }} variant=\"rounded\">\r\n                    {loginUser.data?.data ? emailRemover(loginUser.data.data?.email).charAt(0).toUpperCase() : null}\r\n                </Avatar>\r\n            </ContentUserProfileContainer>\r\n            }\r\n            {matchesMD &&\r\n                <ChannelsAndMessagesContainer>\r\n                    <ChannelsTitleHeader>Channels <AddIcon onClick={handleOpenAddChannel}/></ChannelsTitleHeader>\r\n                    <ChannelsContainer>\r\n                        {channels &&\r\n                            channels.map((data) => {\r\n                                return (<Channel key={data.id} active={selectChannel.id === data.id} \r\n                                    onClick={() => {\r\n                                        return (\r\n                                            intervalRetrieveMessagesinChannel(data)\r\n                                        ) \r\n                                    }}>{data.name}</Channel>)\r\n                                })\r\n                        }\r\n                    </ChannelsContainer>\r\n                    <ChannelsTitleHeader>Direct Messages <AddIcon onClick={handleOpenDM}/></ChannelsTitleHeader>\r\n                    {/* <ChannelsContainer>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                    </ChannelsContainer> */}\r\n                </ChannelsAndMessagesContainer>\r\n            }\r\n        </ContentChannelSection>\r\n    )\r\n}\r\n\r\nexport default ContentChannelSectionComponent\r\n","import {\r\n    style,\r\n    useStyles,\r\n    Container, \r\n    LogoContainer, \r\n    Logo,\r\n    ContentContainer,\r\n    Typography,\r\n    ChannelsAndMessagesContainer,\r\n    ChannelsTitleHeader,\r\n    AddIcon,\r\n    Channel,\r\n    ChannelsContainer\r\n} from './components'\r\nimport channel_logo from '../../assets/sampleLogo.png'\r\nimport Popover from '@mui/material/Popover';\r\nimport useHooks from './hooks'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport AddChannelModalComponent from './NewChannelComponent'\r\nimport {emailRemover} from '../helpers/helpers'\r\nimport AddUserModalComponent from './AddUserComponent'\r\nimport SnackbarComponent from '../Snackbars/index'\r\nimport AddDMModalComponent from './AddDMModalComponent'\r\nimport ContentChatBoxSectionComponent from './ContentChatBoxSectionComponent';\r\nimport ContentChannelSectionComponent from './ContentChannelSectionComponent';\r\n\r\n\r\nimport SwipeableDrawer from '@mui/material/SwipeableDrawer';\r\nimport ContentChatBoxBodyComponent from './ContentChatBoxBody';\r\nimport {useState} from 'react';\r\n\r\n\r\nconst Index = () => {\r\n    const classes = useStyles();\r\n    const {\r\n        loginUser, \r\n        addUserEmail,\r\n        userID,\r\n        searchUserDM,\r\n        searchResultsDM,\r\n        allMessages,\r\n        isLoading,\r\n        handleOpen,\r\n        handleAddUser,\r\n        handleCloseAddUserModal,\r\n        openAddChannel,\r\n        handleClickPopOver,\r\n        handleClosePopOver,\r\n        openPopOver,\r\n        idPopOver,\r\n        handleOpenAddChannel,\r\n        intervalRetrieveMessagesinChannel,\r\n        intervalRetrieveMessagesinUser,\r\n        createAMessage,\r\n        handleLogout,\r\n        openDM,\r\n        handleOpenDM,\r\n        filteredItems,\r\n        debounceOnChange,\r\n        channels,\r\n        selectChannel,\r\n        selectUser,\r\n        users,\r\n        chatMessage,\r\n        open,\r\n        handleClose,\r\n        query,\r\n        anchorEl,\r\n        state,\r\n        createAChannel,\r\n        channelName,\r\n        matchesMD,\r\n        channel\r\n    } = useHooks();\r\n\r\n    const [states, setStates] = useState({\r\n        right: false,\r\n      });\r\n    \r\n      const toggleDrawer = () => {\r\n        setStates({right: true})\r\n      };\r\n\r\n      const handleCloseDrawer = () => {\r\n          setStates({right: false})\r\n      }\r\n\r\n    console.log({channel})\r\n\r\n    return (\r\n        <> \r\n        <Container>\r\n            {matchesMD &&\r\n           <LogoContainer>\r\n                <Logo src={channel_logo} />\r\n           </LogoContainer>}\r\n           <ContentContainer>\r\n               <ContentChannelSectionComponent \r\n                    handleOpenAddChannel={handleOpenAddChannel}\r\n                    handleOpenDM={handleOpenDM}\r\n                    channels={channels}\r\n                    selectChannel={selectChannel}\r\n                    intervalRetrieveMessagesinChannel={intervalRetrieveMessagesinChannel}\r\n                    matchesMD={matchesMD}\r\n                    handleClickPopOver={handleClickPopOver}\r\n                    loginUser={loginUser}\r\n               />\r\n\r\n            {!matchesMD &&\r\n                <ChannelsAndMessagesContainer>\r\n                    <ChannelsTitleHeader>Channels <AddIcon onClick={handleOpenAddChannel}/></ChannelsTitleHeader>\r\n                    <ChannelsContainer>\r\n                        {channels &&\r\n                            channels.map((data) => {\r\n                                return (<Channel key={data.id} active={selectChannel.id === data.id} \r\n                                    onClick={() => {\r\n                                        return (\r\n                                            intervalRetrieveMessagesinChannel(data),\r\n                                            toggleDrawer()\r\n                                        )\r\n                                    }}>{data.name}</Channel>)\r\n                                })\r\n                        }\r\n                    </ChannelsContainer>\r\n                    <ChannelsTitleHeader>Direct Messages <AddIcon onClick={handleOpenDM}/></ChannelsTitleHeader>\r\n                    {/* <ChannelsContainer>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                        <UserChatBoxComponent initial={`M`} imgSrc={``} name={`Mike Camino`}/>\r\n                    </ChannelsContainer> */}\r\n                </ChannelsAndMessagesContainer>\r\n            }\r\n\r\n            {matchesMD &&\r\n               <ContentChatBoxSectionComponent \r\n                    loginUser={loginUser}\r\n                    handleClickPopOver={handleClickPopOver}\r\n                    selectChannel={selectChannel}\r\n                    selectUser={selectUser}\r\n                    allMessages={allMessages}\r\n                    handleOpen={handleOpen}\r\n                    createAMessage={createAMessage}\r\n                    classes={classes}\r\n                    chatMessage={chatMessage}\r\n                    matchesMD={matchesMD}\r\n                    channel={channel}\r\n               /> \r\n            }\r\n           </ContentContainer>\r\n\r\n            {/* Modal for Add User  */}\r\n            {users.data?.data  &&\r\n            <AddUserModalComponent\r\n                open={open}\r\n                handleClose={handleClose}\r\n                style={style}\r\n                classes={classes}\r\n                userID={userID}\r\n                emailRemover={emailRemover}\r\n                handleAddUser={handleAddUser}\r\n                selectChannel={selectChannel}\r\n                loginUser={loginUser}\r\n                debounceOnChange={debounceOnChange}\r\n                filteredItems={filteredItems}\r\n                query={query}\r\n                matchesMD={matchesMD}\r\n            />\r\n            }\r\n            {isLoading  &&\r\n                <Backdrop\r\n                    sx={{ color: '#fff' ,zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                    open={true}\r\n                    onClick={handleClose}\r\n                >\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            }\r\n\r\n            {users.data?.data  &&\r\n                <AddDMModalComponent\r\n                    open={openDM}\r\n                    handleClose={handleClose}\r\n                    style={style}\r\n                    classes={classes}\r\n                    addUserEmail={addUserEmail}\r\n                    searchUser={searchUserDM}\r\n                    // getSearchUser={getSearchUserDM}\r\n                    users={searchUserDM.length < 1 ? users.data?.data : searchResultsDM}\r\n                    emailRemover={emailRemover}\r\n                    selectChannel={selectChannel}\r\n                    loginUser={loginUser}\r\n                    intervalRetrieveMessagesinUser={intervalRetrieveMessagesinUser}\r\n                    debounceOnChange={debounceOnChange}\r\n                    filteredItems={filteredItems}\r\n                    matchesMD={matchesMD}\r\n                    toggleDrawer={toggleDrawer}\r\n                />\r\n            } \r\n            \r\n            {/* For Logout */}\r\n            <div>\r\n                <Popover\r\n                    id={idPopOver}\r\n                    open={openPopOver}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClosePopOver}\r\n                    anchorOrigin={{\r\n                        vertical: 'center',\r\n                        horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: 'top',\r\n                        horizontal: 'right',\r\n                    }}\r\n                >\r\n                    <Typography sx={{ p: 2 }} >ID No: {loginUser.data.data?.id}</Typography>\r\n                    <Typography sx={{ p: 2 }} >User ID: {emailRemover(loginUser.data.data?.uid)}</Typography>\r\n                    <Typography sx={{ p: 2 }} style={{cursor: 'pointer'}} onClick={() => handleLogout()}>Logout</Typography>\r\n                </Popover>\r\n            </div>\r\n\r\n            {/* Modal for Add Channel */}\r\n            {users.data?.data && \r\n                <AddChannelModalComponent\r\n                    openAddChannel={openAddChannel}\r\n                    handleCloseChannel={handleClose}\r\n                    classes={classes}\r\n                    createAChannel={createAChannel}\r\n                    channelName={channelName}\r\n                    // inputUsers={inputUsers}\r\n                    usersList={users}\r\n                    loginUser={loginUser}\r\n                    intervalRetrieveMessagesinUser={intervalRetrieveMessagesinUser}\r\n                    debounceOnChange={debounceOnChange}\r\n                    filteredItems={filteredItems}\r\n                    matchesMD={matchesMD}\r\n                />\r\n            }\r\n\r\n            {/* Snackbar */}\r\n            <SnackbarComponent \r\n                isOpen={state.open} \r\n                close={handleCloseAddUserModal}\r\n                message={state.message}\r\n                status={state.warning ? `warning` : `success`}\r\n            />\r\n\r\n            {!matchesMD &&\r\n                    <SwipeableDrawer\r\n                        anchor='right'\r\n                        open={states.right}\r\n                        style={{ width: '100%'}}\r\n                        classes={{ paper: classes.paper }}\r\n                    >\r\n                        <ContentChatBoxBodyComponent \r\n                            selectChannel={selectChannel}\r\n                            selectUser={selectUser}\r\n                            handleOpen={handleOpen}\r\n                            allMessages={allMessages}\r\n                            loginUser={loginUser}\r\n                            createAMessage={createAMessage}\r\n                            classes={classes}\r\n                            chatMessage={chatMessage}\r\n                            handleCloseDrawer={handleCloseDrawer}\r\n                        />\r\n                    </SwipeableDrawer>\r\n            }\r\n        </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index;\r\n","import styled, { keyframes } from 'styled-components'\r\nimport MaterialContainer from '@mui/material/Container'\r\nimport MaterialButton from '@mui/material/Button'\r\nimport MaterialLink from '@mui/material/Link'\r\nimport MaterialTextField from '@mui/material/TextField';\r\nimport MaterialTypography from '@mui/material/Typography';\r\nimport MaterialBox from '@mui/material/Box';\r\nimport { fadeIn } from 'react-animations';\r\n\r\n\r\nconst fadeInAnimation = keyframes`${fadeIn}`;\r\n\r\nexport const Container = styled(MaterialContainer) `\r\n    display: flex !important;\r\n    align-items: center !important;\r\n    height: 100vh !important;\r\n    font-family: 'Source Sans Pro', sans-serif !important;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    animation: 1s ${fadeInAnimation};\r\n`\r\nexport const Button = styled(MaterialButton) `\r\n    background: #34495e !important;\r\n    &:hover {\r\n        opacity: 0.9 !important;\r\n        background: #34495e !important;\r\n    }\r\n`\r\nexport const Link = styled(MaterialLink) `\r\n    color: #34495e !important;\r\n`\r\nexport const Box = styled(MaterialBox) `\r\n\r\n`\r\nexport const TextField = styled(MaterialTextField) ``\r\nexport const Typography = styled(MaterialTypography) ``\r\nexport const LogoTitle = styled.span ``\r\nexport const LogoImg = styled.img `\r\n    width: 30%; \r\n    height: 30%;\r\n`","import {useContext, useState, useRef} from 'react'\r\nimport {AppContext} from '../Global/AppContext'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { creatingUserSessionAPI } from '../api/api'\r\n\r\n\r\nconst useHooks = () => {\r\n    const {isLogin, setIsLogin, loginUser, setLoginUser} = useContext(AppContext)\r\n    const email = useRef('')\r\n    const password = useRef('')\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        isLoading: false,\r\n        response: '',\r\n        responseMessage: '',\r\n        warning: false,\r\n    })\r\n    const history = useHistory();\r\n\r\n    // Creating a User Session\r\n    const handleLogin = async() => {\r\n        setState({isLoading: true})\r\n        creatingUserSessionAPI(email, password, state, setState, setLoginUser, setIsLogin, history)\r\n    }\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n          return;\r\n        };\r\n        setState({\r\n          ...state, open: false,\r\n        })\r\n    };\r\n  \r\n    return {\r\n        isLogin,\r\n        setIsLogin,\r\n        loginUser, \r\n        setLoginUser,\r\n        handleClose,\r\n        email,\r\n        password,\r\n        history,\r\n        state,\r\n        handleLogin\r\n    }\r\n}\r\n\r\nexport default useHooks","import { Link as RouterLink } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Container, \r\n  Button, \r\n  Link, \r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  LogoTitle,\r\n  LogoImg\r\n} from './components'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Snackbar from '../Snackbars'\r\nimport useHooks from './hooks'\r\nimport channel_logo from '../../assets/sampleLogo.png'\r\n\r\n\r\nconst Index = (props) => {\r\n  const {\r\n    handleClose,\r\n    email,\r\n    password,\r\n    state,\r\n    handleLogin} = useHooks();\r\n  \r\n    return (\r\n        <>\r\n         <Box\r\n            sx={{\r\n            backgroundColor: 'background.default',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n            justifyContent: 'center'\r\n            }}\r\n         >\r\n            <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n              password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            // onSubmit={() => {\r\n            //   navigate('/app/dashboard', { replace: true });\r\n            // }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box sx={{ mb: 3, textAlign: 'center', }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                    style={{display: 'flex', flexDirection: 'column', alignItems: 'center'}}\r\n                  >\r\n                    <LogoImg src={channel_logo} />\r\n                    <LogoTitle>Avion School</LogoTitle>\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    pb: 1,\r\n                    pt: 3\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    Login your email address\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                  inputRef={email}\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                  inputRef={password}\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={!state.warning && isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    onClick={() => handleLogin()}\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link component={RouterLink} to=\"/register\" variant=\"h6\" underline=\"hover\">\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n        {state.isLoading && \r\n          <Backdrop\r\n            sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n            open={true}\r\n            // onClick={handleClose}\r\n          >\r\n            <CircularProgress color=\"inherit\" />\r\n          </Backdrop>\r\n          }\r\n          <Snackbar \r\n            isOpen={state.open} \r\n            close={handleClose}\r\n            message={state.responseMessage}\r\n            status={state.warning ? 'warning': 'success'}\r\n          />\r\n        </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import styled, { keyframes } from 'styled-components'\r\nimport MaterialContainer from '@mui/material/Container'\r\nimport MaterialButton from '@mui/material/Button'\r\nimport MaterialLink from '@mui/material/Link'\r\nimport MaterialBox from '@mui/material/Box';\r\nimport MaterialCheckbox from '@mui/material/Checkbox';\r\nimport MaterialFormHelperText from '@mui/material/FormHelperText';\r\nimport MaterialTextField from '@mui/material/TextField';\r\nimport MaterialTypography from '@mui/material/Typography';\r\nimport { fadeIn } from 'react-animations';\r\n\r\n\r\nconst fadeInAnimation = keyframes`${fadeIn}`;\r\n    \r\n\r\n\r\nexport const Container = styled(MaterialContainer) `\r\n    display: flex !important;\r\n    align-items: center !important;\r\n    height: 100vh !important;\r\n    font-family: 'Source Sans Pro', sans-serif !important;\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    animation: 1s ${fadeInAnimation};\r\n`\r\nexport const Button = styled(MaterialButton) `\r\n    background: #34495e !important;\r\n    &:hover {\r\n        opacity: 0.9 !important;\r\n        background: #34495e !important;\r\n    }\r\n`\r\nexport const Link = styled(MaterialLink) `\r\n    color: #34495e !important;\r\n`\r\nexport const Box = styled(MaterialBox) ``\r\nexport const Checkbox = styled(MaterialCheckbox) ``\r\nexport const FormHelperText = styled(MaterialFormHelperText) ``\r\nexport const TextField = styled(MaterialTextField) ``\r\nexport const Typography = styled(MaterialTypography) ``","import {useRef, useState} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useHooks = () => {\r\n\r\n    const email = useRef('')\r\n    const password = useRef('')\r\n    const retypePassword = useRef('')\r\n\r\n    const [state, setState] = useState({\r\n        open: false,\r\n        loading: false,\r\n        response: '',\r\n        responseMessage: '',\r\n        warning: false,\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        };\r\n        setState({\r\n            ...state, open: false,\r\n        })\r\n    };\r\n    return {\r\n        email,\r\n        password,\r\n        retypePassword,\r\n        history,\r\n        handleClose,\r\n        state,\r\n        setState\r\n    }\r\n}\r\n\r\nexport default useHooks\r\n","import { useState, useEffect, useRef } from 'react';\r\nimport { Link as RouterLink, useHistory} from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Container, \r\n  Button, \r\n  Link, \r\n  Box,\r\n  // Checkbox,\r\n  // FormHelperText,\r\n  TextField,\r\n  Typography} from './components'\r\nimport axios from 'axios'\r\nimport Snackbar from '../Snackbars'\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport useHooks from './hooks'\r\nimport { userRegistrationAPI } from '../api/api';\r\n\r\n\r\nconst Register = (props) => {\r\n  const {email,\r\n    password,\r\n    retypePassword,\r\n    history,\r\n    handleClose,\r\n    state,\r\n    setState} = useHooks();\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          backgroundColor: 'background.default',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          height: '100%',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              retypepassword: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n            Yup.object().shape({\r\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n              password: Yup.string().max(255).required('Password is required'),\r\n              retypepassword: Yup.string().max(255).required('Retype password is required').oneOf([Yup.ref('password'), null], 'Passwords must match'),\r\n              // policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n            })\r\n          }\r\n\r\n          // User Registration\r\n            onSubmit={async() => {\r\n              setState({...state, loading: true})\r\n              userRegistrationAPI(email, password, retypePassword, state, setState, history)\r\n            }}\r\n          >\r\n            \r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              \r\n              <form onSubmit={handleSubmit} method=\"POST\">\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Use your email to create new account\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                  inputRef={email}\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                  inputRef={password}\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.retypepassword && errors.retypepassword)}\r\n                  fullWidth\r\n                  helperText={touched.retypepassword && errors.retypepassword}\r\n                  label=\"Retype Password\"\r\n                  margin=\"normal\"\r\n                  name=\"retypepassword\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.retypepassword}\r\n                  variant=\"outlined\"\r\n                  inputRef={retypePassword}\r\n                />\r\n                <Box sx={{ py: 2 }}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    {state.loading && \r\n                    <Backdrop\r\n                      sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\r\n                      open={true}\r\n                      onClick={handleClose}\r\n                    >\r\n                      <CircularProgress color=\"inherit\" />\r\n                    </Backdrop>\r\n                    }\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link component={RouterLink} to=\"/login\" variant=\"h6\" underline=\"hover\">\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n          <Snackbar \r\n            isOpen={state.open} \r\n            close={handleClose}\r\n            message={state.responseMessage}\r\n            status={state.warning ? 'warning' : 'success'}\r\n          />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;","\r\nimport Home from '../../bak_pages/Home'\r\nimport DMs from '../../bak_pages/DMs'\r\nimport Mentions from '../../bak_pages/Mentions'\r\nimport You from '../../bak_pages/You'\r\n\r\n\r\nimport { Redirect } from 'react-router-dom'\r\nimport MainPage from '../Main'\r\nimport Login from '../Login'\r\nimport Register from \"../Register\";\r\nimport ContentChatBoxBodyComponent from '../Main/ContentChatBoxBody'\r\n\r\nconst Index = (props) => {\r\n  const {Switch, Route, isLogin, loginUser} = props;\r\n  return (\r\n    <>\r\n      <Switch>\r\n          <Route exact path=\"/app/:id\" component={() => isLogin ? <MainPage/> : <Redirect to='/login'/>} />\r\n          <Route exact path=\"/login\" component={() => isLogin ? <Redirect to={`/app/${loginUser.data?.data?.id}`}/> : <Login />} />\r\n          <Route exact path=\"/\" component={() => isLogin ? <Redirect to={`/app/${loginUser.data?.data?.id}`}/> : <Login />} />\r\n          <Route exact path=\"/register\" component={() => isLogin ? <Redirect to={`/app/${loginUser.data?.data?.id}`}/> : <Register />} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","import {useContext, useEffect} from 'react'\r\nimport {AppContext} from '../Global/AppContext'\r\nimport Cookies from 'js-cookie'\r\n\r\n\r\nconst useHooks = () => {\r\n    const {isLogin, setIsLogin, loginUser, setLoginUser} = useContext(AppContext)\r\n\r\n    const readCookie = () => {\r\n        const user = Cookies.get(\"user\")\r\n        if(user) {\r\n            setIsLogin(true)\r\n        } else {\r\n            setIsLogin(false)\r\n        }\r\n    } \r\n\r\n    useEffect(() => {\r\n        readCookie();\r\n    }, [])\r\n    \r\n    return {\r\n        isLogin,\r\n        setIsLogin,\r\n        loginUser,\r\n        setLoginUser\r\n    }\r\n}\r\n\r\nexport default useHooks","// import {\r\n//     Link\r\n// } from './components.js';\r\n\r\n// import HeaderComponent from './Header.js';\r\n// import FooterComponent from './Footer.js';\r\n\r\nimport React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n\r\nimport SwitchComponent from '../Routes';\r\nimport useHooks from './hooks';\r\n\r\n\r\n\r\nconst Index = () => {\r\n    const { isLogin,\r\n        loginUser } = useHooks();\r\n    \r\n    \r\n    return (\r\n        <>\r\n            {/* <Router>\r\n                <HeaderComponent useLocation={useLocation}/>\r\n                <SwitchComponent Switch={Switch} Route={Route} useLocation={useLocation}/>\r\n                <FooterComponent Link={Link} useLocation={useLocation}/>\r\n                <Redirect to={`/`} />\r\n            </Router> */}\r\n            <Router>\r\n                <SwitchComponent \r\n                    Switch={Switch} \r\n                    Route={Route} \r\n                    isLogin={isLogin}\r\n                    loginUser={loginUser}\r\n                />\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Index\r\n","import Components from './components/Layout'\nimport AppProvider from './components/Global/AppContext'\n\n\nfunction App() {\n  return (\n    <>\n      <AppProvider>\n        <Components/>\n      </AppProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}